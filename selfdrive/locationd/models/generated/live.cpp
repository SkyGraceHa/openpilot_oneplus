#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5834698563058751852) {
   out_5834698563058751852[0] = 0;
   out_5834698563058751852[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5834698563058751852[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5834698563058751852[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5834698563058751852[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5834698563058751852[5] = -sin(in_vec[1]);
   out_5834698563058751852[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5834698563058751852[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5834698563058751852[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5834698563058751852[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5834698563058751852[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5834698563058751852[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5834698563058751852[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5834698563058751852[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5834698563058751852[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5834698563058751852[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5834698563058751852[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5834698563058751852[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4551778613262176225) {
   out_4551778613262176225[0] = delta_x[0] + nom_x[0];
   out_4551778613262176225[1] = delta_x[1] + nom_x[1];
   out_4551778613262176225[2] = delta_x[2] + nom_x[2];
   out_4551778613262176225[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4551778613262176225[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4551778613262176225[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4551778613262176225[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4551778613262176225[7] = delta_x[6] + nom_x[7];
   out_4551778613262176225[8] = delta_x[7] + nom_x[8];
   out_4551778613262176225[9] = delta_x[8] + nom_x[9];
   out_4551778613262176225[10] = delta_x[9] + nom_x[10];
   out_4551778613262176225[11] = delta_x[10] + nom_x[11];
   out_4551778613262176225[12] = delta_x[11] + nom_x[12];
   out_4551778613262176225[13] = delta_x[12] + nom_x[13];
   out_4551778613262176225[14] = delta_x[13] + nom_x[14];
   out_4551778613262176225[15] = delta_x[14] + nom_x[15];
   out_4551778613262176225[16] = delta_x[15] + nom_x[16];
   out_4551778613262176225[17] = delta_x[16] + nom_x[17];
   out_4551778613262176225[18] = delta_x[17] + nom_x[18];
   out_4551778613262176225[19] = delta_x[18] + nom_x[19];
   out_4551778613262176225[20] = delta_x[19] + nom_x[20];
   out_4551778613262176225[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6507307579328985080) {
   out_6507307579328985080[0] = -nom_x[0] + true_x[0];
   out_6507307579328985080[1] = -nom_x[1] + true_x[1];
   out_6507307579328985080[2] = -nom_x[2] + true_x[2];
   out_6507307579328985080[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6507307579328985080[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6507307579328985080[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6507307579328985080[6] = -nom_x[7] + true_x[7];
   out_6507307579328985080[7] = -nom_x[8] + true_x[8];
   out_6507307579328985080[8] = -nom_x[9] + true_x[9];
   out_6507307579328985080[9] = -nom_x[10] + true_x[10];
   out_6507307579328985080[10] = -nom_x[11] + true_x[11];
   out_6507307579328985080[11] = -nom_x[12] + true_x[12];
   out_6507307579328985080[12] = -nom_x[13] + true_x[13];
   out_6507307579328985080[13] = -nom_x[14] + true_x[14];
   out_6507307579328985080[14] = -nom_x[15] + true_x[15];
   out_6507307579328985080[15] = -nom_x[16] + true_x[16];
   out_6507307579328985080[16] = -nom_x[17] + true_x[17];
   out_6507307579328985080[17] = -nom_x[18] + true_x[18];
   out_6507307579328985080[18] = -nom_x[19] + true_x[19];
   out_6507307579328985080[19] = -nom_x[20] + true_x[20];
   out_6507307579328985080[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2944519432004620697) {
   out_2944519432004620697[0] = 1.0;
   out_2944519432004620697[1] = 0;
   out_2944519432004620697[2] = 0;
   out_2944519432004620697[3] = 0;
   out_2944519432004620697[4] = 0;
   out_2944519432004620697[5] = 0;
   out_2944519432004620697[6] = 0;
   out_2944519432004620697[7] = 0;
   out_2944519432004620697[8] = 0;
   out_2944519432004620697[9] = 0;
   out_2944519432004620697[10] = 0;
   out_2944519432004620697[11] = 0;
   out_2944519432004620697[12] = 0;
   out_2944519432004620697[13] = 0;
   out_2944519432004620697[14] = 0;
   out_2944519432004620697[15] = 0;
   out_2944519432004620697[16] = 0;
   out_2944519432004620697[17] = 0;
   out_2944519432004620697[18] = 0;
   out_2944519432004620697[19] = 0;
   out_2944519432004620697[20] = 0;
   out_2944519432004620697[21] = 0;
   out_2944519432004620697[22] = 1.0;
   out_2944519432004620697[23] = 0;
   out_2944519432004620697[24] = 0;
   out_2944519432004620697[25] = 0;
   out_2944519432004620697[26] = 0;
   out_2944519432004620697[27] = 0;
   out_2944519432004620697[28] = 0;
   out_2944519432004620697[29] = 0;
   out_2944519432004620697[30] = 0;
   out_2944519432004620697[31] = 0;
   out_2944519432004620697[32] = 0;
   out_2944519432004620697[33] = 0;
   out_2944519432004620697[34] = 0;
   out_2944519432004620697[35] = 0;
   out_2944519432004620697[36] = 0;
   out_2944519432004620697[37] = 0;
   out_2944519432004620697[38] = 0;
   out_2944519432004620697[39] = 0;
   out_2944519432004620697[40] = 0;
   out_2944519432004620697[41] = 0;
   out_2944519432004620697[42] = 0;
   out_2944519432004620697[43] = 0;
   out_2944519432004620697[44] = 1.0;
   out_2944519432004620697[45] = 0;
   out_2944519432004620697[46] = 0;
   out_2944519432004620697[47] = 0;
   out_2944519432004620697[48] = 0;
   out_2944519432004620697[49] = 0;
   out_2944519432004620697[50] = 0;
   out_2944519432004620697[51] = 0;
   out_2944519432004620697[52] = 0;
   out_2944519432004620697[53] = 0;
   out_2944519432004620697[54] = 0;
   out_2944519432004620697[55] = 0;
   out_2944519432004620697[56] = 0;
   out_2944519432004620697[57] = 0;
   out_2944519432004620697[58] = 0;
   out_2944519432004620697[59] = 0;
   out_2944519432004620697[60] = 0;
   out_2944519432004620697[61] = 0;
   out_2944519432004620697[62] = 0;
   out_2944519432004620697[63] = 0;
   out_2944519432004620697[64] = 0;
   out_2944519432004620697[65] = 0;
   out_2944519432004620697[66] = -0.5*state[4];
   out_2944519432004620697[67] = -0.5*state[5];
   out_2944519432004620697[68] = -0.5*state[6];
   out_2944519432004620697[69] = 0;
   out_2944519432004620697[70] = 0;
   out_2944519432004620697[71] = 0;
   out_2944519432004620697[72] = 0;
   out_2944519432004620697[73] = 0;
   out_2944519432004620697[74] = 0;
   out_2944519432004620697[75] = 0;
   out_2944519432004620697[76] = 0;
   out_2944519432004620697[77] = 0;
   out_2944519432004620697[78] = 0;
   out_2944519432004620697[79] = 0;
   out_2944519432004620697[80] = 0;
   out_2944519432004620697[81] = 0;
   out_2944519432004620697[82] = 0;
   out_2944519432004620697[83] = 0;
   out_2944519432004620697[84] = 0;
   out_2944519432004620697[85] = 0;
   out_2944519432004620697[86] = 0;
   out_2944519432004620697[87] = 0.5*state[3];
   out_2944519432004620697[88] = 0.5*state[6];
   out_2944519432004620697[89] = -0.5*state[5];
   out_2944519432004620697[90] = 0;
   out_2944519432004620697[91] = 0;
   out_2944519432004620697[92] = 0;
   out_2944519432004620697[93] = 0;
   out_2944519432004620697[94] = 0;
   out_2944519432004620697[95] = 0;
   out_2944519432004620697[96] = 0;
   out_2944519432004620697[97] = 0;
   out_2944519432004620697[98] = 0;
   out_2944519432004620697[99] = 0;
   out_2944519432004620697[100] = 0;
   out_2944519432004620697[101] = 0;
   out_2944519432004620697[102] = 0;
   out_2944519432004620697[103] = 0;
   out_2944519432004620697[104] = 0;
   out_2944519432004620697[105] = 0;
   out_2944519432004620697[106] = 0;
   out_2944519432004620697[107] = 0;
   out_2944519432004620697[108] = -0.5*state[6];
   out_2944519432004620697[109] = 0.5*state[3];
   out_2944519432004620697[110] = 0.5*state[4];
   out_2944519432004620697[111] = 0;
   out_2944519432004620697[112] = 0;
   out_2944519432004620697[113] = 0;
   out_2944519432004620697[114] = 0;
   out_2944519432004620697[115] = 0;
   out_2944519432004620697[116] = 0;
   out_2944519432004620697[117] = 0;
   out_2944519432004620697[118] = 0;
   out_2944519432004620697[119] = 0;
   out_2944519432004620697[120] = 0;
   out_2944519432004620697[121] = 0;
   out_2944519432004620697[122] = 0;
   out_2944519432004620697[123] = 0;
   out_2944519432004620697[124] = 0;
   out_2944519432004620697[125] = 0;
   out_2944519432004620697[126] = 0;
   out_2944519432004620697[127] = 0;
   out_2944519432004620697[128] = 0;
   out_2944519432004620697[129] = 0.5*state[5];
   out_2944519432004620697[130] = -0.5*state[4];
   out_2944519432004620697[131] = 0.5*state[3];
   out_2944519432004620697[132] = 0;
   out_2944519432004620697[133] = 0;
   out_2944519432004620697[134] = 0;
   out_2944519432004620697[135] = 0;
   out_2944519432004620697[136] = 0;
   out_2944519432004620697[137] = 0;
   out_2944519432004620697[138] = 0;
   out_2944519432004620697[139] = 0;
   out_2944519432004620697[140] = 0;
   out_2944519432004620697[141] = 0;
   out_2944519432004620697[142] = 0;
   out_2944519432004620697[143] = 0;
   out_2944519432004620697[144] = 0;
   out_2944519432004620697[145] = 0;
   out_2944519432004620697[146] = 0;
   out_2944519432004620697[147] = 0;
   out_2944519432004620697[148] = 0;
   out_2944519432004620697[149] = 0;
   out_2944519432004620697[150] = 0;
   out_2944519432004620697[151] = 0;
   out_2944519432004620697[152] = 0;
   out_2944519432004620697[153] = 1.0;
   out_2944519432004620697[154] = 0;
   out_2944519432004620697[155] = 0;
   out_2944519432004620697[156] = 0;
   out_2944519432004620697[157] = 0;
   out_2944519432004620697[158] = 0;
   out_2944519432004620697[159] = 0;
   out_2944519432004620697[160] = 0;
   out_2944519432004620697[161] = 0;
   out_2944519432004620697[162] = 0;
   out_2944519432004620697[163] = 0;
   out_2944519432004620697[164] = 0;
   out_2944519432004620697[165] = 0;
   out_2944519432004620697[166] = 0;
   out_2944519432004620697[167] = 0;
   out_2944519432004620697[168] = 0;
   out_2944519432004620697[169] = 0;
   out_2944519432004620697[170] = 0;
   out_2944519432004620697[171] = 0;
   out_2944519432004620697[172] = 0;
   out_2944519432004620697[173] = 0;
   out_2944519432004620697[174] = 0;
   out_2944519432004620697[175] = 1.0;
   out_2944519432004620697[176] = 0;
   out_2944519432004620697[177] = 0;
   out_2944519432004620697[178] = 0;
   out_2944519432004620697[179] = 0;
   out_2944519432004620697[180] = 0;
   out_2944519432004620697[181] = 0;
   out_2944519432004620697[182] = 0;
   out_2944519432004620697[183] = 0;
   out_2944519432004620697[184] = 0;
   out_2944519432004620697[185] = 0;
   out_2944519432004620697[186] = 0;
   out_2944519432004620697[187] = 0;
   out_2944519432004620697[188] = 0;
   out_2944519432004620697[189] = 0;
   out_2944519432004620697[190] = 0;
   out_2944519432004620697[191] = 0;
   out_2944519432004620697[192] = 0;
   out_2944519432004620697[193] = 0;
   out_2944519432004620697[194] = 0;
   out_2944519432004620697[195] = 0;
   out_2944519432004620697[196] = 0;
   out_2944519432004620697[197] = 1.0;
   out_2944519432004620697[198] = 0;
   out_2944519432004620697[199] = 0;
   out_2944519432004620697[200] = 0;
   out_2944519432004620697[201] = 0;
   out_2944519432004620697[202] = 0;
   out_2944519432004620697[203] = 0;
   out_2944519432004620697[204] = 0;
   out_2944519432004620697[205] = 0;
   out_2944519432004620697[206] = 0;
   out_2944519432004620697[207] = 0;
   out_2944519432004620697[208] = 0;
   out_2944519432004620697[209] = 0;
   out_2944519432004620697[210] = 0;
   out_2944519432004620697[211] = 0;
   out_2944519432004620697[212] = 0;
   out_2944519432004620697[213] = 0;
   out_2944519432004620697[214] = 0;
   out_2944519432004620697[215] = 0;
   out_2944519432004620697[216] = 0;
   out_2944519432004620697[217] = 0;
   out_2944519432004620697[218] = 0;
   out_2944519432004620697[219] = 1.0;
   out_2944519432004620697[220] = 0;
   out_2944519432004620697[221] = 0;
   out_2944519432004620697[222] = 0;
   out_2944519432004620697[223] = 0;
   out_2944519432004620697[224] = 0;
   out_2944519432004620697[225] = 0;
   out_2944519432004620697[226] = 0;
   out_2944519432004620697[227] = 0;
   out_2944519432004620697[228] = 0;
   out_2944519432004620697[229] = 0;
   out_2944519432004620697[230] = 0;
   out_2944519432004620697[231] = 0;
   out_2944519432004620697[232] = 0;
   out_2944519432004620697[233] = 0;
   out_2944519432004620697[234] = 0;
   out_2944519432004620697[235] = 0;
   out_2944519432004620697[236] = 0;
   out_2944519432004620697[237] = 0;
   out_2944519432004620697[238] = 0;
   out_2944519432004620697[239] = 0;
   out_2944519432004620697[240] = 0;
   out_2944519432004620697[241] = 1.0;
   out_2944519432004620697[242] = 0;
   out_2944519432004620697[243] = 0;
   out_2944519432004620697[244] = 0;
   out_2944519432004620697[245] = 0;
   out_2944519432004620697[246] = 0;
   out_2944519432004620697[247] = 0;
   out_2944519432004620697[248] = 0;
   out_2944519432004620697[249] = 0;
   out_2944519432004620697[250] = 0;
   out_2944519432004620697[251] = 0;
   out_2944519432004620697[252] = 0;
   out_2944519432004620697[253] = 0;
   out_2944519432004620697[254] = 0;
   out_2944519432004620697[255] = 0;
   out_2944519432004620697[256] = 0;
   out_2944519432004620697[257] = 0;
   out_2944519432004620697[258] = 0;
   out_2944519432004620697[259] = 0;
   out_2944519432004620697[260] = 0;
   out_2944519432004620697[261] = 0;
   out_2944519432004620697[262] = 0;
   out_2944519432004620697[263] = 1.0;
   out_2944519432004620697[264] = 0;
   out_2944519432004620697[265] = 0;
   out_2944519432004620697[266] = 0;
   out_2944519432004620697[267] = 0;
   out_2944519432004620697[268] = 0;
   out_2944519432004620697[269] = 0;
   out_2944519432004620697[270] = 0;
   out_2944519432004620697[271] = 0;
   out_2944519432004620697[272] = 0;
   out_2944519432004620697[273] = 0;
   out_2944519432004620697[274] = 0;
   out_2944519432004620697[275] = 0;
   out_2944519432004620697[276] = 0;
   out_2944519432004620697[277] = 0;
   out_2944519432004620697[278] = 0;
   out_2944519432004620697[279] = 0;
   out_2944519432004620697[280] = 0;
   out_2944519432004620697[281] = 0;
   out_2944519432004620697[282] = 0;
   out_2944519432004620697[283] = 0;
   out_2944519432004620697[284] = 0;
   out_2944519432004620697[285] = 1.0;
   out_2944519432004620697[286] = 0;
   out_2944519432004620697[287] = 0;
   out_2944519432004620697[288] = 0;
   out_2944519432004620697[289] = 0;
   out_2944519432004620697[290] = 0;
   out_2944519432004620697[291] = 0;
   out_2944519432004620697[292] = 0;
   out_2944519432004620697[293] = 0;
   out_2944519432004620697[294] = 0;
   out_2944519432004620697[295] = 0;
   out_2944519432004620697[296] = 0;
   out_2944519432004620697[297] = 0;
   out_2944519432004620697[298] = 0;
   out_2944519432004620697[299] = 0;
   out_2944519432004620697[300] = 0;
   out_2944519432004620697[301] = 0;
   out_2944519432004620697[302] = 0;
   out_2944519432004620697[303] = 0;
   out_2944519432004620697[304] = 0;
   out_2944519432004620697[305] = 0;
   out_2944519432004620697[306] = 0;
   out_2944519432004620697[307] = 1.0;
   out_2944519432004620697[308] = 0;
   out_2944519432004620697[309] = 0;
   out_2944519432004620697[310] = 0;
   out_2944519432004620697[311] = 0;
   out_2944519432004620697[312] = 0;
   out_2944519432004620697[313] = 0;
   out_2944519432004620697[314] = 0;
   out_2944519432004620697[315] = 0;
   out_2944519432004620697[316] = 0;
   out_2944519432004620697[317] = 0;
   out_2944519432004620697[318] = 0;
   out_2944519432004620697[319] = 0;
   out_2944519432004620697[320] = 0;
   out_2944519432004620697[321] = 0;
   out_2944519432004620697[322] = 0;
   out_2944519432004620697[323] = 0;
   out_2944519432004620697[324] = 0;
   out_2944519432004620697[325] = 0;
   out_2944519432004620697[326] = 0;
   out_2944519432004620697[327] = 0;
   out_2944519432004620697[328] = 0;
   out_2944519432004620697[329] = 1.0;
   out_2944519432004620697[330] = 0;
   out_2944519432004620697[331] = 0;
   out_2944519432004620697[332] = 0;
   out_2944519432004620697[333] = 0;
   out_2944519432004620697[334] = 0;
   out_2944519432004620697[335] = 0;
   out_2944519432004620697[336] = 0;
   out_2944519432004620697[337] = 0;
   out_2944519432004620697[338] = 0;
   out_2944519432004620697[339] = 0;
   out_2944519432004620697[340] = 0;
   out_2944519432004620697[341] = 0;
   out_2944519432004620697[342] = 0;
   out_2944519432004620697[343] = 0;
   out_2944519432004620697[344] = 0;
   out_2944519432004620697[345] = 0;
   out_2944519432004620697[346] = 0;
   out_2944519432004620697[347] = 0;
   out_2944519432004620697[348] = 0;
   out_2944519432004620697[349] = 0;
   out_2944519432004620697[350] = 0;
   out_2944519432004620697[351] = 1.0;
   out_2944519432004620697[352] = 0;
   out_2944519432004620697[353] = 0;
   out_2944519432004620697[354] = 0;
   out_2944519432004620697[355] = 0;
   out_2944519432004620697[356] = 0;
   out_2944519432004620697[357] = 0;
   out_2944519432004620697[358] = 0;
   out_2944519432004620697[359] = 0;
   out_2944519432004620697[360] = 0;
   out_2944519432004620697[361] = 0;
   out_2944519432004620697[362] = 0;
   out_2944519432004620697[363] = 0;
   out_2944519432004620697[364] = 0;
   out_2944519432004620697[365] = 0;
   out_2944519432004620697[366] = 0;
   out_2944519432004620697[367] = 0;
   out_2944519432004620697[368] = 0;
   out_2944519432004620697[369] = 0;
   out_2944519432004620697[370] = 0;
   out_2944519432004620697[371] = 0;
   out_2944519432004620697[372] = 0;
   out_2944519432004620697[373] = 1.0;
   out_2944519432004620697[374] = 0;
   out_2944519432004620697[375] = 0;
   out_2944519432004620697[376] = 0;
   out_2944519432004620697[377] = 0;
   out_2944519432004620697[378] = 0;
   out_2944519432004620697[379] = 0;
   out_2944519432004620697[380] = 0;
   out_2944519432004620697[381] = 0;
   out_2944519432004620697[382] = 0;
   out_2944519432004620697[383] = 0;
   out_2944519432004620697[384] = 0;
   out_2944519432004620697[385] = 0;
   out_2944519432004620697[386] = 0;
   out_2944519432004620697[387] = 0;
   out_2944519432004620697[388] = 0;
   out_2944519432004620697[389] = 0;
   out_2944519432004620697[390] = 0;
   out_2944519432004620697[391] = 0;
   out_2944519432004620697[392] = 0;
   out_2944519432004620697[393] = 0;
   out_2944519432004620697[394] = 0;
   out_2944519432004620697[395] = 1.0;
   out_2944519432004620697[396] = 0;
   out_2944519432004620697[397] = 0;
   out_2944519432004620697[398] = 0;
   out_2944519432004620697[399] = 0;
   out_2944519432004620697[400] = 0;
   out_2944519432004620697[401] = 0;
   out_2944519432004620697[402] = 0;
   out_2944519432004620697[403] = 0;
   out_2944519432004620697[404] = 0;
   out_2944519432004620697[405] = 0;
   out_2944519432004620697[406] = 0;
   out_2944519432004620697[407] = 0;
   out_2944519432004620697[408] = 0;
   out_2944519432004620697[409] = 0;
   out_2944519432004620697[410] = 0;
   out_2944519432004620697[411] = 0;
   out_2944519432004620697[412] = 0;
   out_2944519432004620697[413] = 0;
   out_2944519432004620697[414] = 0;
   out_2944519432004620697[415] = 0;
   out_2944519432004620697[416] = 0;
   out_2944519432004620697[417] = 1.0;
   out_2944519432004620697[418] = 0;
   out_2944519432004620697[419] = 0;
   out_2944519432004620697[420] = 0;
   out_2944519432004620697[421] = 0;
   out_2944519432004620697[422] = 0;
   out_2944519432004620697[423] = 0;
   out_2944519432004620697[424] = 0;
   out_2944519432004620697[425] = 0;
   out_2944519432004620697[426] = 0;
   out_2944519432004620697[427] = 0;
   out_2944519432004620697[428] = 0;
   out_2944519432004620697[429] = 0;
   out_2944519432004620697[430] = 0;
   out_2944519432004620697[431] = 0;
   out_2944519432004620697[432] = 0;
   out_2944519432004620697[433] = 0;
   out_2944519432004620697[434] = 0;
   out_2944519432004620697[435] = 0;
   out_2944519432004620697[436] = 0;
   out_2944519432004620697[437] = 0;
   out_2944519432004620697[438] = 0;
   out_2944519432004620697[439] = 1.0;
   out_2944519432004620697[440] = 0;
   out_2944519432004620697[441] = 0;
   out_2944519432004620697[442] = 0;
   out_2944519432004620697[443] = 0;
   out_2944519432004620697[444] = 0;
   out_2944519432004620697[445] = 0;
   out_2944519432004620697[446] = 0;
   out_2944519432004620697[447] = 0;
   out_2944519432004620697[448] = 0;
   out_2944519432004620697[449] = 0;
   out_2944519432004620697[450] = 0;
   out_2944519432004620697[451] = 0;
   out_2944519432004620697[452] = 0;
   out_2944519432004620697[453] = 0;
   out_2944519432004620697[454] = 0;
   out_2944519432004620697[455] = 0;
   out_2944519432004620697[456] = 0;
   out_2944519432004620697[457] = 0;
   out_2944519432004620697[458] = 0;
   out_2944519432004620697[459] = 0;
   out_2944519432004620697[460] = 0;
   out_2944519432004620697[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4787033309393199537) {
   out_4787033309393199537[0] = dt*state[7] + state[0];
   out_4787033309393199537[1] = dt*state[8] + state[1];
   out_4787033309393199537[2] = dt*state[9] + state[2];
   out_4787033309393199537[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4787033309393199537[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4787033309393199537[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4787033309393199537[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4787033309393199537[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4787033309393199537[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4787033309393199537[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4787033309393199537[10] = state[10];
   out_4787033309393199537[11] = state[11];
   out_4787033309393199537[12] = state[12];
   out_4787033309393199537[13] = state[13];
   out_4787033309393199537[14] = state[14];
   out_4787033309393199537[15] = state[15];
   out_4787033309393199537[16] = state[16];
   out_4787033309393199537[17] = state[17];
   out_4787033309393199537[18] = state[18];
   out_4787033309393199537[19] = state[19];
   out_4787033309393199537[20] = state[20];
   out_4787033309393199537[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3436111882846278325) {
   out_3436111882846278325[0] = 1;
   out_3436111882846278325[1] = 0;
   out_3436111882846278325[2] = 0;
   out_3436111882846278325[3] = 0;
   out_3436111882846278325[4] = 0;
   out_3436111882846278325[5] = 0;
   out_3436111882846278325[6] = dt;
   out_3436111882846278325[7] = 0;
   out_3436111882846278325[8] = 0;
   out_3436111882846278325[9] = 0;
   out_3436111882846278325[10] = 0;
   out_3436111882846278325[11] = 0;
   out_3436111882846278325[12] = 0;
   out_3436111882846278325[13] = 0;
   out_3436111882846278325[14] = 0;
   out_3436111882846278325[15] = 0;
   out_3436111882846278325[16] = 0;
   out_3436111882846278325[17] = 0;
   out_3436111882846278325[18] = 0;
   out_3436111882846278325[19] = 0;
   out_3436111882846278325[20] = 0;
   out_3436111882846278325[21] = 0;
   out_3436111882846278325[22] = 1;
   out_3436111882846278325[23] = 0;
   out_3436111882846278325[24] = 0;
   out_3436111882846278325[25] = 0;
   out_3436111882846278325[26] = 0;
   out_3436111882846278325[27] = 0;
   out_3436111882846278325[28] = dt;
   out_3436111882846278325[29] = 0;
   out_3436111882846278325[30] = 0;
   out_3436111882846278325[31] = 0;
   out_3436111882846278325[32] = 0;
   out_3436111882846278325[33] = 0;
   out_3436111882846278325[34] = 0;
   out_3436111882846278325[35] = 0;
   out_3436111882846278325[36] = 0;
   out_3436111882846278325[37] = 0;
   out_3436111882846278325[38] = 0;
   out_3436111882846278325[39] = 0;
   out_3436111882846278325[40] = 0;
   out_3436111882846278325[41] = 0;
   out_3436111882846278325[42] = 0;
   out_3436111882846278325[43] = 0;
   out_3436111882846278325[44] = 1;
   out_3436111882846278325[45] = 0;
   out_3436111882846278325[46] = 0;
   out_3436111882846278325[47] = 0;
   out_3436111882846278325[48] = 0;
   out_3436111882846278325[49] = 0;
   out_3436111882846278325[50] = dt;
   out_3436111882846278325[51] = 0;
   out_3436111882846278325[52] = 0;
   out_3436111882846278325[53] = 0;
   out_3436111882846278325[54] = 0;
   out_3436111882846278325[55] = 0;
   out_3436111882846278325[56] = 0;
   out_3436111882846278325[57] = 0;
   out_3436111882846278325[58] = 0;
   out_3436111882846278325[59] = 0;
   out_3436111882846278325[60] = 0;
   out_3436111882846278325[61] = 0;
   out_3436111882846278325[62] = 0;
   out_3436111882846278325[63] = 0;
   out_3436111882846278325[64] = 0;
   out_3436111882846278325[65] = 0;
   out_3436111882846278325[66] = 1;
   out_3436111882846278325[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3436111882846278325[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3436111882846278325[69] = 0;
   out_3436111882846278325[70] = 0;
   out_3436111882846278325[71] = 0;
   out_3436111882846278325[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3436111882846278325[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3436111882846278325[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3436111882846278325[75] = 0;
   out_3436111882846278325[76] = 0;
   out_3436111882846278325[77] = 0;
   out_3436111882846278325[78] = 0;
   out_3436111882846278325[79] = 0;
   out_3436111882846278325[80] = 0;
   out_3436111882846278325[81] = 0;
   out_3436111882846278325[82] = 0;
   out_3436111882846278325[83] = 0;
   out_3436111882846278325[84] = 0;
   out_3436111882846278325[85] = 0;
   out_3436111882846278325[86] = 0;
   out_3436111882846278325[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3436111882846278325[88] = 1;
   out_3436111882846278325[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3436111882846278325[90] = 0;
   out_3436111882846278325[91] = 0;
   out_3436111882846278325[92] = 0;
   out_3436111882846278325[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3436111882846278325[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3436111882846278325[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3436111882846278325[96] = 0;
   out_3436111882846278325[97] = 0;
   out_3436111882846278325[98] = 0;
   out_3436111882846278325[99] = 0;
   out_3436111882846278325[100] = 0;
   out_3436111882846278325[101] = 0;
   out_3436111882846278325[102] = 0;
   out_3436111882846278325[103] = 0;
   out_3436111882846278325[104] = 0;
   out_3436111882846278325[105] = 0;
   out_3436111882846278325[106] = 0;
   out_3436111882846278325[107] = 0;
   out_3436111882846278325[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3436111882846278325[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3436111882846278325[110] = 1;
   out_3436111882846278325[111] = 0;
   out_3436111882846278325[112] = 0;
   out_3436111882846278325[113] = 0;
   out_3436111882846278325[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3436111882846278325[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3436111882846278325[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3436111882846278325[117] = 0;
   out_3436111882846278325[118] = 0;
   out_3436111882846278325[119] = 0;
   out_3436111882846278325[120] = 0;
   out_3436111882846278325[121] = 0;
   out_3436111882846278325[122] = 0;
   out_3436111882846278325[123] = 0;
   out_3436111882846278325[124] = 0;
   out_3436111882846278325[125] = 0;
   out_3436111882846278325[126] = 0;
   out_3436111882846278325[127] = 0;
   out_3436111882846278325[128] = 0;
   out_3436111882846278325[129] = 0;
   out_3436111882846278325[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3436111882846278325[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3436111882846278325[132] = 1;
   out_3436111882846278325[133] = 0;
   out_3436111882846278325[134] = 0;
   out_3436111882846278325[135] = 0;
   out_3436111882846278325[136] = 0;
   out_3436111882846278325[137] = 0;
   out_3436111882846278325[138] = 0;
   out_3436111882846278325[139] = 0;
   out_3436111882846278325[140] = 0;
   out_3436111882846278325[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3436111882846278325[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3436111882846278325[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3436111882846278325[144] = 0;
   out_3436111882846278325[145] = 0;
   out_3436111882846278325[146] = 0;
   out_3436111882846278325[147] = 0;
   out_3436111882846278325[148] = 0;
   out_3436111882846278325[149] = 0;
   out_3436111882846278325[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3436111882846278325[151] = 0;
   out_3436111882846278325[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3436111882846278325[153] = 0;
   out_3436111882846278325[154] = 1;
   out_3436111882846278325[155] = 0;
   out_3436111882846278325[156] = 0;
   out_3436111882846278325[157] = 0;
   out_3436111882846278325[158] = 0;
   out_3436111882846278325[159] = 0;
   out_3436111882846278325[160] = 0;
   out_3436111882846278325[161] = 0;
   out_3436111882846278325[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3436111882846278325[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3436111882846278325[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3436111882846278325[165] = 0;
   out_3436111882846278325[166] = 0;
   out_3436111882846278325[167] = 0;
   out_3436111882846278325[168] = 0;
   out_3436111882846278325[169] = 0;
   out_3436111882846278325[170] = 0;
   out_3436111882846278325[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3436111882846278325[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3436111882846278325[173] = 0;
   out_3436111882846278325[174] = 0;
   out_3436111882846278325[175] = 0;
   out_3436111882846278325[176] = 1;
   out_3436111882846278325[177] = 0;
   out_3436111882846278325[178] = 0;
   out_3436111882846278325[179] = 0;
   out_3436111882846278325[180] = 0;
   out_3436111882846278325[181] = 0;
   out_3436111882846278325[182] = 0;
   out_3436111882846278325[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3436111882846278325[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3436111882846278325[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3436111882846278325[186] = 0;
   out_3436111882846278325[187] = 0;
   out_3436111882846278325[188] = 0;
   out_3436111882846278325[189] = 0;
   out_3436111882846278325[190] = 0;
   out_3436111882846278325[191] = 0;
   out_3436111882846278325[192] = 0;
   out_3436111882846278325[193] = 0;
   out_3436111882846278325[194] = 0;
   out_3436111882846278325[195] = 0;
   out_3436111882846278325[196] = 0;
   out_3436111882846278325[197] = 0;
   out_3436111882846278325[198] = 1;
   out_3436111882846278325[199] = 0;
   out_3436111882846278325[200] = 0;
   out_3436111882846278325[201] = 0;
   out_3436111882846278325[202] = 0;
   out_3436111882846278325[203] = 0;
   out_3436111882846278325[204] = 0;
   out_3436111882846278325[205] = 0;
   out_3436111882846278325[206] = 0;
   out_3436111882846278325[207] = 0;
   out_3436111882846278325[208] = 0;
   out_3436111882846278325[209] = 0;
   out_3436111882846278325[210] = 0;
   out_3436111882846278325[211] = 0;
   out_3436111882846278325[212] = 0;
   out_3436111882846278325[213] = 0;
   out_3436111882846278325[214] = 0;
   out_3436111882846278325[215] = 0;
   out_3436111882846278325[216] = 0;
   out_3436111882846278325[217] = 0;
   out_3436111882846278325[218] = 0;
   out_3436111882846278325[219] = 0;
   out_3436111882846278325[220] = 1;
   out_3436111882846278325[221] = 0;
   out_3436111882846278325[222] = 0;
   out_3436111882846278325[223] = 0;
   out_3436111882846278325[224] = 0;
   out_3436111882846278325[225] = 0;
   out_3436111882846278325[226] = 0;
   out_3436111882846278325[227] = 0;
   out_3436111882846278325[228] = 0;
   out_3436111882846278325[229] = 0;
   out_3436111882846278325[230] = 0;
   out_3436111882846278325[231] = 0;
   out_3436111882846278325[232] = 0;
   out_3436111882846278325[233] = 0;
   out_3436111882846278325[234] = 0;
   out_3436111882846278325[235] = 0;
   out_3436111882846278325[236] = 0;
   out_3436111882846278325[237] = 0;
   out_3436111882846278325[238] = 0;
   out_3436111882846278325[239] = 0;
   out_3436111882846278325[240] = 0;
   out_3436111882846278325[241] = 0;
   out_3436111882846278325[242] = 1;
   out_3436111882846278325[243] = 0;
   out_3436111882846278325[244] = 0;
   out_3436111882846278325[245] = 0;
   out_3436111882846278325[246] = 0;
   out_3436111882846278325[247] = 0;
   out_3436111882846278325[248] = 0;
   out_3436111882846278325[249] = 0;
   out_3436111882846278325[250] = 0;
   out_3436111882846278325[251] = 0;
   out_3436111882846278325[252] = 0;
   out_3436111882846278325[253] = 0;
   out_3436111882846278325[254] = 0;
   out_3436111882846278325[255] = 0;
   out_3436111882846278325[256] = 0;
   out_3436111882846278325[257] = 0;
   out_3436111882846278325[258] = 0;
   out_3436111882846278325[259] = 0;
   out_3436111882846278325[260] = 0;
   out_3436111882846278325[261] = 0;
   out_3436111882846278325[262] = 0;
   out_3436111882846278325[263] = 0;
   out_3436111882846278325[264] = 1;
   out_3436111882846278325[265] = 0;
   out_3436111882846278325[266] = 0;
   out_3436111882846278325[267] = 0;
   out_3436111882846278325[268] = 0;
   out_3436111882846278325[269] = 0;
   out_3436111882846278325[270] = 0;
   out_3436111882846278325[271] = 0;
   out_3436111882846278325[272] = 0;
   out_3436111882846278325[273] = 0;
   out_3436111882846278325[274] = 0;
   out_3436111882846278325[275] = 0;
   out_3436111882846278325[276] = 0;
   out_3436111882846278325[277] = 0;
   out_3436111882846278325[278] = 0;
   out_3436111882846278325[279] = 0;
   out_3436111882846278325[280] = 0;
   out_3436111882846278325[281] = 0;
   out_3436111882846278325[282] = 0;
   out_3436111882846278325[283] = 0;
   out_3436111882846278325[284] = 0;
   out_3436111882846278325[285] = 0;
   out_3436111882846278325[286] = 1;
   out_3436111882846278325[287] = 0;
   out_3436111882846278325[288] = 0;
   out_3436111882846278325[289] = 0;
   out_3436111882846278325[290] = 0;
   out_3436111882846278325[291] = 0;
   out_3436111882846278325[292] = 0;
   out_3436111882846278325[293] = 0;
   out_3436111882846278325[294] = 0;
   out_3436111882846278325[295] = 0;
   out_3436111882846278325[296] = 0;
   out_3436111882846278325[297] = 0;
   out_3436111882846278325[298] = 0;
   out_3436111882846278325[299] = 0;
   out_3436111882846278325[300] = 0;
   out_3436111882846278325[301] = 0;
   out_3436111882846278325[302] = 0;
   out_3436111882846278325[303] = 0;
   out_3436111882846278325[304] = 0;
   out_3436111882846278325[305] = 0;
   out_3436111882846278325[306] = 0;
   out_3436111882846278325[307] = 0;
   out_3436111882846278325[308] = 1;
   out_3436111882846278325[309] = 0;
   out_3436111882846278325[310] = 0;
   out_3436111882846278325[311] = 0;
   out_3436111882846278325[312] = 0;
   out_3436111882846278325[313] = 0;
   out_3436111882846278325[314] = 0;
   out_3436111882846278325[315] = 0;
   out_3436111882846278325[316] = 0;
   out_3436111882846278325[317] = 0;
   out_3436111882846278325[318] = 0;
   out_3436111882846278325[319] = 0;
   out_3436111882846278325[320] = 0;
   out_3436111882846278325[321] = 0;
   out_3436111882846278325[322] = 0;
   out_3436111882846278325[323] = 0;
   out_3436111882846278325[324] = 0;
   out_3436111882846278325[325] = 0;
   out_3436111882846278325[326] = 0;
   out_3436111882846278325[327] = 0;
   out_3436111882846278325[328] = 0;
   out_3436111882846278325[329] = 0;
   out_3436111882846278325[330] = 1;
   out_3436111882846278325[331] = 0;
   out_3436111882846278325[332] = 0;
   out_3436111882846278325[333] = 0;
   out_3436111882846278325[334] = 0;
   out_3436111882846278325[335] = 0;
   out_3436111882846278325[336] = 0;
   out_3436111882846278325[337] = 0;
   out_3436111882846278325[338] = 0;
   out_3436111882846278325[339] = 0;
   out_3436111882846278325[340] = 0;
   out_3436111882846278325[341] = 0;
   out_3436111882846278325[342] = 0;
   out_3436111882846278325[343] = 0;
   out_3436111882846278325[344] = 0;
   out_3436111882846278325[345] = 0;
   out_3436111882846278325[346] = 0;
   out_3436111882846278325[347] = 0;
   out_3436111882846278325[348] = 0;
   out_3436111882846278325[349] = 0;
   out_3436111882846278325[350] = 0;
   out_3436111882846278325[351] = 0;
   out_3436111882846278325[352] = 1;
   out_3436111882846278325[353] = 0;
   out_3436111882846278325[354] = 0;
   out_3436111882846278325[355] = 0;
   out_3436111882846278325[356] = 0;
   out_3436111882846278325[357] = 0;
   out_3436111882846278325[358] = 0;
   out_3436111882846278325[359] = 0;
   out_3436111882846278325[360] = 0;
   out_3436111882846278325[361] = 0;
   out_3436111882846278325[362] = 0;
   out_3436111882846278325[363] = 0;
   out_3436111882846278325[364] = 0;
   out_3436111882846278325[365] = 0;
   out_3436111882846278325[366] = 0;
   out_3436111882846278325[367] = 0;
   out_3436111882846278325[368] = 0;
   out_3436111882846278325[369] = 0;
   out_3436111882846278325[370] = 0;
   out_3436111882846278325[371] = 0;
   out_3436111882846278325[372] = 0;
   out_3436111882846278325[373] = 0;
   out_3436111882846278325[374] = 1;
   out_3436111882846278325[375] = 0;
   out_3436111882846278325[376] = 0;
   out_3436111882846278325[377] = 0;
   out_3436111882846278325[378] = 0;
   out_3436111882846278325[379] = 0;
   out_3436111882846278325[380] = 0;
   out_3436111882846278325[381] = 0;
   out_3436111882846278325[382] = 0;
   out_3436111882846278325[383] = 0;
   out_3436111882846278325[384] = 0;
   out_3436111882846278325[385] = 0;
   out_3436111882846278325[386] = 0;
   out_3436111882846278325[387] = 0;
   out_3436111882846278325[388] = 0;
   out_3436111882846278325[389] = 0;
   out_3436111882846278325[390] = 0;
   out_3436111882846278325[391] = 0;
   out_3436111882846278325[392] = 0;
   out_3436111882846278325[393] = 0;
   out_3436111882846278325[394] = 0;
   out_3436111882846278325[395] = 0;
   out_3436111882846278325[396] = 1;
   out_3436111882846278325[397] = 0;
   out_3436111882846278325[398] = 0;
   out_3436111882846278325[399] = 0;
   out_3436111882846278325[400] = 0;
   out_3436111882846278325[401] = 0;
   out_3436111882846278325[402] = 0;
   out_3436111882846278325[403] = 0;
   out_3436111882846278325[404] = 0;
   out_3436111882846278325[405] = 0;
   out_3436111882846278325[406] = 0;
   out_3436111882846278325[407] = 0;
   out_3436111882846278325[408] = 0;
   out_3436111882846278325[409] = 0;
   out_3436111882846278325[410] = 0;
   out_3436111882846278325[411] = 0;
   out_3436111882846278325[412] = 0;
   out_3436111882846278325[413] = 0;
   out_3436111882846278325[414] = 0;
   out_3436111882846278325[415] = 0;
   out_3436111882846278325[416] = 0;
   out_3436111882846278325[417] = 0;
   out_3436111882846278325[418] = 1;
   out_3436111882846278325[419] = 0;
   out_3436111882846278325[420] = 0;
   out_3436111882846278325[421] = 0;
   out_3436111882846278325[422] = 0;
   out_3436111882846278325[423] = 0;
   out_3436111882846278325[424] = 0;
   out_3436111882846278325[425] = 0;
   out_3436111882846278325[426] = 0;
   out_3436111882846278325[427] = 0;
   out_3436111882846278325[428] = 0;
   out_3436111882846278325[429] = 0;
   out_3436111882846278325[430] = 0;
   out_3436111882846278325[431] = 0;
   out_3436111882846278325[432] = 0;
   out_3436111882846278325[433] = 0;
   out_3436111882846278325[434] = 0;
   out_3436111882846278325[435] = 0;
   out_3436111882846278325[436] = 0;
   out_3436111882846278325[437] = 0;
   out_3436111882846278325[438] = 0;
   out_3436111882846278325[439] = 0;
   out_3436111882846278325[440] = 1;
}
void h_4(double *state, double *unused, double *out_9005088952734900117) {
   out_9005088952734900117[0] = state[10] + state[13];
   out_9005088952734900117[1] = state[11] + state[14];
   out_9005088952734900117[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6170015058849545423) {
   out_6170015058849545423[0] = 0;
   out_6170015058849545423[1] = 0;
   out_6170015058849545423[2] = 0;
   out_6170015058849545423[3] = 0;
   out_6170015058849545423[4] = 0;
   out_6170015058849545423[5] = 0;
   out_6170015058849545423[6] = 0;
   out_6170015058849545423[7] = 0;
   out_6170015058849545423[8] = 0;
   out_6170015058849545423[9] = 0;
   out_6170015058849545423[10] = 1;
   out_6170015058849545423[11] = 0;
   out_6170015058849545423[12] = 0;
   out_6170015058849545423[13] = 1;
   out_6170015058849545423[14] = 0;
   out_6170015058849545423[15] = 0;
   out_6170015058849545423[16] = 0;
   out_6170015058849545423[17] = 0;
   out_6170015058849545423[18] = 0;
   out_6170015058849545423[19] = 0;
   out_6170015058849545423[20] = 0;
   out_6170015058849545423[21] = 0;
   out_6170015058849545423[22] = 0;
   out_6170015058849545423[23] = 0;
   out_6170015058849545423[24] = 0;
   out_6170015058849545423[25] = 0;
   out_6170015058849545423[26] = 0;
   out_6170015058849545423[27] = 0;
   out_6170015058849545423[28] = 0;
   out_6170015058849545423[29] = 0;
   out_6170015058849545423[30] = 0;
   out_6170015058849545423[31] = 0;
   out_6170015058849545423[32] = 0;
   out_6170015058849545423[33] = 1;
   out_6170015058849545423[34] = 0;
   out_6170015058849545423[35] = 0;
   out_6170015058849545423[36] = 1;
   out_6170015058849545423[37] = 0;
   out_6170015058849545423[38] = 0;
   out_6170015058849545423[39] = 0;
   out_6170015058849545423[40] = 0;
   out_6170015058849545423[41] = 0;
   out_6170015058849545423[42] = 0;
   out_6170015058849545423[43] = 0;
   out_6170015058849545423[44] = 0;
   out_6170015058849545423[45] = 0;
   out_6170015058849545423[46] = 0;
   out_6170015058849545423[47] = 0;
   out_6170015058849545423[48] = 0;
   out_6170015058849545423[49] = 0;
   out_6170015058849545423[50] = 0;
   out_6170015058849545423[51] = 0;
   out_6170015058849545423[52] = 0;
   out_6170015058849545423[53] = 0;
   out_6170015058849545423[54] = 0;
   out_6170015058849545423[55] = 0;
   out_6170015058849545423[56] = 1;
   out_6170015058849545423[57] = 0;
   out_6170015058849545423[58] = 0;
   out_6170015058849545423[59] = 1;
   out_6170015058849545423[60] = 0;
   out_6170015058849545423[61] = 0;
   out_6170015058849545423[62] = 0;
   out_6170015058849545423[63] = 0;
   out_6170015058849545423[64] = 0;
   out_6170015058849545423[65] = 0;
}
void h_9(double *state, double *unused, double *out_7159739524475622057) {
   out_7159739524475622057[0] = state[10];
   out_7159739524475622057[1] = state[11];
   out_7159739524475622057[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5928825412219954778) {
   out_5928825412219954778[0] = 0;
   out_5928825412219954778[1] = 0;
   out_5928825412219954778[2] = 0;
   out_5928825412219954778[3] = 0;
   out_5928825412219954778[4] = 0;
   out_5928825412219954778[5] = 0;
   out_5928825412219954778[6] = 0;
   out_5928825412219954778[7] = 0;
   out_5928825412219954778[8] = 0;
   out_5928825412219954778[9] = 0;
   out_5928825412219954778[10] = 1;
   out_5928825412219954778[11] = 0;
   out_5928825412219954778[12] = 0;
   out_5928825412219954778[13] = 0;
   out_5928825412219954778[14] = 0;
   out_5928825412219954778[15] = 0;
   out_5928825412219954778[16] = 0;
   out_5928825412219954778[17] = 0;
   out_5928825412219954778[18] = 0;
   out_5928825412219954778[19] = 0;
   out_5928825412219954778[20] = 0;
   out_5928825412219954778[21] = 0;
   out_5928825412219954778[22] = 0;
   out_5928825412219954778[23] = 0;
   out_5928825412219954778[24] = 0;
   out_5928825412219954778[25] = 0;
   out_5928825412219954778[26] = 0;
   out_5928825412219954778[27] = 0;
   out_5928825412219954778[28] = 0;
   out_5928825412219954778[29] = 0;
   out_5928825412219954778[30] = 0;
   out_5928825412219954778[31] = 0;
   out_5928825412219954778[32] = 0;
   out_5928825412219954778[33] = 1;
   out_5928825412219954778[34] = 0;
   out_5928825412219954778[35] = 0;
   out_5928825412219954778[36] = 0;
   out_5928825412219954778[37] = 0;
   out_5928825412219954778[38] = 0;
   out_5928825412219954778[39] = 0;
   out_5928825412219954778[40] = 0;
   out_5928825412219954778[41] = 0;
   out_5928825412219954778[42] = 0;
   out_5928825412219954778[43] = 0;
   out_5928825412219954778[44] = 0;
   out_5928825412219954778[45] = 0;
   out_5928825412219954778[46] = 0;
   out_5928825412219954778[47] = 0;
   out_5928825412219954778[48] = 0;
   out_5928825412219954778[49] = 0;
   out_5928825412219954778[50] = 0;
   out_5928825412219954778[51] = 0;
   out_5928825412219954778[52] = 0;
   out_5928825412219954778[53] = 0;
   out_5928825412219954778[54] = 0;
   out_5928825412219954778[55] = 0;
   out_5928825412219954778[56] = 1;
   out_5928825412219954778[57] = 0;
   out_5928825412219954778[58] = 0;
   out_5928825412219954778[59] = 0;
   out_5928825412219954778[60] = 0;
   out_5928825412219954778[61] = 0;
   out_5928825412219954778[62] = 0;
   out_5928825412219954778[63] = 0;
   out_5928825412219954778[64] = 0;
   out_5928825412219954778[65] = 0;
}
void h_10(double *state, double *unused, double *out_4714610444686356390) {
   out_4714610444686356390[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4714610444686356390[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4714610444686356390[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3555931460627110693) {
   out_3555931460627110693[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3555931460627110693[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3555931460627110693[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3555931460627110693[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3555931460627110693[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3555931460627110693[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3555931460627110693[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3555931460627110693[7] = 0;
   out_3555931460627110693[8] = 0;
   out_3555931460627110693[9] = 0;
   out_3555931460627110693[10] = 0;
   out_3555931460627110693[11] = 0;
   out_3555931460627110693[12] = 0;
   out_3555931460627110693[13] = 0;
   out_3555931460627110693[14] = 0;
   out_3555931460627110693[15] = 0;
   out_3555931460627110693[16] = 1;
   out_3555931460627110693[17] = 0;
   out_3555931460627110693[18] = 0;
   out_3555931460627110693[19] = 1;
   out_3555931460627110693[20] = 0;
   out_3555931460627110693[21] = 0;
   out_3555931460627110693[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3555931460627110693[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3555931460627110693[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3555931460627110693[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3555931460627110693[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3555931460627110693[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3555931460627110693[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3555931460627110693[29] = 0;
   out_3555931460627110693[30] = 0;
   out_3555931460627110693[31] = 0;
   out_3555931460627110693[32] = 0;
   out_3555931460627110693[33] = 0;
   out_3555931460627110693[34] = 0;
   out_3555931460627110693[35] = 0;
   out_3555931460627110693[36] = 0;
   out_3555931460627110693[37] = 0;
   out_3555931460627110693[38] = 0;
   out_3555931460627110693[39] = 1;
   out_3555931460627110693[40] = 0;
   out_3555931460627110693[41] = 0;
   out_3555931460627110693[42] = 1;
   out_3555931460627110693[43] = 0;
   out_3555931460627110693[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3555931460627110693[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3555931460627110693[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3555931460627110693[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3555931460627110693[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3555931460627110693[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3555931460627110693[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3555931460627110693[51] = 0;
   out_3555931460627110693[52] = 0;
   out_3555931460627110693[53] = 0;
   out_3555931460627110693[54] = 0;
   out_3555931460627110693[55] = 0;
   out_3555931460627110693[56] = 0;
   out_3555931460627110693[57] = 0;
   out_3555931460627110693[58] = 0;
   out_3555931460627110693[59] = 0;
   out_3555931460627110693[60] = 0;
   out_3555931460627110693[61] = 0;
   out_3555931460627110693[62] = 1;
   out_3555931460627110693[63] = 0;
   out_3555931460627110693[64] = 0;
   out_3555931460627110693[65] = 1;
}
void h_12(double *state, double *unused, double *out_282882114802560714) {
   out_282882114802560714[0] = state[0];
   out_282882114802560714[1] = state[1];
   out_282882114802560714[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5548916033801951756) {
   out_5548916033801951756[0] = 1;
   out_5548916033801951756[1] = 0;
   out_5548916033801951756[2] = 0;
   out_5548916033801951756[3] = 0;
   out_5548916033801951756[4] = 0;
   out_5548916033801951756[5] = 0;
   out_5548916033801951756[6] = 0;
   out_5548916033801951756[7] = 0;
   out_5548916033801951756[8] = 0;
   out_5548916033801951756[9] = 0;
   out_5548916033801951756[10] = 0;
   out_5548916033801951756[11] = 0;
   out_5548916033801951756[12] = 0;
   out_5548916033801951756[13] = 0;
   out_5548916033801951756[14] = 0;
   out_5548916033801951756[15] = 0;
   out_5548916033801951756[16] = 0;
   out_5548916033801951756[17] = 0;
   out_5548916033801951756[18] = 0;
   out_5548916033801951756[19] = 0;
   out_5548916033801951756[20] = 0;
   out_5548916033801951756[21] = 0;
   out_5548916033801951756[22] = 0;
   out_5548916033801951756[23] = 1;
   out_5548916033801951756[24] = 0;
   out_5548916033801951756[25] = 0;
   out_5548916033801951756[26] = 0;
   out_5548916033801951756[27] = 0;
   out_5548916033801951756[28] = 0;
   out_5548916033801951756[29] = 0;
   out_5548916033801951756[30] = 0;
   out_5548916033801951756[31] = 0;
   out_5548916033801951756[32] = 0;
   out_5548916033801951756[33] = 0;
   out_5548916033801951756[34] = 0;
   out_5548916033801951756[35] = 0;
   out_5548916033801951756[36] = 0;
   out_5548916033801951756[37] = 0;
   out_5548916033801951756[38] = 0;
   out_5548916033801951756[39] = 0;
   out_5548916033801951756[40] = 0;
   out_5548916033801951756[41] = 0;
   out_5548916033801951756[42] = 0;
   out_5548916033801951756[43] = 0;
   out_5548916033801951756[44] = 0;
   out_5548916033801951756[45] = 0;
   out_5548916033801951756[46] = 1;
   out_5548916033801951756[47] = 0;
   out_5548916033801951756[48] = 0;
   out_5548916033801951756[49] = 0;
   out_5548916033801951756[50] = 0;
   out_5548916033801951756[51] = 0;
   out_5548916033801951756[52] = 0;
   out_5548916033801951756[53] = 0;
   out_5548916033801951756[54] = 0;
   out_5548916033801951756[55] = 0;
   out_5548916033801951756[56] = 0;
   out_5548916033801951756[57] = 0;
   out_5548916033801951756[58] = 0;
   out_5548916033801951756[59] = 0;
   out_5548916033801951756[60] = 0;
   out_5548916033801951756[61] = 0;
   out_5548916033801951756[62] = 0;
   out_5548916033801951756[63] = 0;
   out_5548916033801951756[64] = 0;
   out_5548916033801951756[65] = 0;
}
void h_31(double *state, double *unused, double *out_4420967260717887798) {
   out_4420967260717887798[0] = state[7];
   out_4420967260717887798[1] = state[8];
   out_4420967260717887798[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2803353001476938047) {
   out_2803353001476938047[0] = 0;
   out_2803353001476938047[1] = 0;
   out_2803353001476938047[2] = 0;
   out_2803353001476938047[3] = 0;
   out_2803353001476938047[4] = 0;
   out_2803353001476938047[5] = 0;
   out_2803353001476938047[6] = 0;
   out_2803353001476938047[7] = 1;
   out_2803353001476938047[8] = 0;
   out_2803353001476938047[9] = 0;
   out_2803353001476938047[10] = 0;
   out_2803353001476938047[11] = 0;
   out_2803353001476938047[12] = 0;
   out_2803353001476938047[13] = 0;
   out_2803353001476938047[14] = 0;
   out_2803353001476938047[15] = 0;
   out_2803353001476938047[16] = 0;
   out_2803353001476938047[17] = 0;
   out_2803353001476938047[18] = 0;
   out_2803353001476938047[19] = 0;
   out_2803353001476938047[20] = 0;
   out_2803353001476938047[21] = 0;
   out_2803353001476938047[22] = 0;
   out_2803353001476938047[23] = 0;
   out_2803353001476938047[24] = 0;
   out_2803353001476938047[25] = 0;
   out_2803353001476938047[26] = 0;
   out_2803353001476938047[27] = 0;
   out_2803353001476938047[28] = 0;
   out_2803353001476938047[29] = 0;
   out_2803353001476938047[30] = 1;
   out_2803353001476938047[31] = 0;
   out_2803353001476938047[32] = 0;
   out_2803353001476938047[33] = 0;
   out_2803353001476938047[34] = 0;
   out_2803353001476938047[35] = 0;
   out_2803353001476938047[36] = 0;
   out_2803353001476938047[37] = 0;
   out_2803353001476938047[38] = 0;
   out_2803353001476938047[39] = 0;
   out_2803353001476938047[40] = 0;
   out_2803353001476938047[41] = 0;
   out_2803353001476938047[42] = 0;
   out_2803353001476938047[43] = 0;
   out_2803353001476938047[44] = 0;
   out_2803353001476938047[45] = 0;
   out_2803353001476938047[46] = 0;
   out_2803353001476938047[47] = 0;
   out_2803353001476938047[48] = 0;
   out_2803353001476938047[49] = 0;
   out_2803353001476938047[50] = 0;
   out_2803353001476938047[51] = 0;
   out_2803353001476938047[52] = 0;
   out_2803353001476938047[53] = 1;
   out_2803353001476938047[54] = 0;
   out_2803353001476938047[55] = 0;
   out_2803353001476938047[56] = 0;
   out_2803353001476938047[57] = 0;
   out_2803353001476938047[58] = 0;
   out_2803353001476938047[59] = 0;
   out_2803353001476938047[60] = 0;
   out_2803353001476938047[61] = 0;
   out_2803353001476938047[62] = 0;
   out_2803353001476938047[63] = 0;
   out_2803353001476938047[64] = 0;
   out_2803353001476938047[65] = 0;
}
void h_32(double *state, double *unused, double *out_7175403914380037657) {
   out_7175403914380037657[0] = state[3];
   out_7175403914380037657[1] = state[4];
   out_7175403914380037657[2] = state[5];
   out_7175403914380037657[3] = state[6];
}
void H_32(double *state, double *unused, double *out_98328488575188110) {
   out_98328488575188110[0] = 0;
   out_98328488575188110[1] = 0;
   out_98328488575188110[2] = 0;
   out_98328488575188110[3] = 1;
   out_98328488575188110[4] = 0;
   out_98328488575188110[5] = 0;
   out_98328488575188110[6] = 0;
   out_98328488575188110[7] = 0;
   out_98328488575188110[8] = 0;
   out_98328488575188110[9] = 0;
   out_98328488575188110[10] = 0;
   out_98328488575188110[11] = 0;
   out_98328488575188110[12] = 0;
   out_98328488575188110[13] = 0;
   out_98328488575188110[14] = 0;
   out_98328488575188110[15] = 0;
   out_98328488575188110[16] = 0;
   out_98328488575188110[17] = 0;
   out_98328488575188110[18] = 0;
   out_98328488575188110[19] = 0;
   out_98328488575188110[20] = 0;
   out_98328488575188110[21] = 0;
   out_98328488575188110[22] = 0;
   out_98328488575188110[23] = 0;
   out_98328488575188110[24] = 0;
   out_98328488575188110[25] = 0;
   out_98328488575188110[26] = 1;
   out_98328488575188110[27] = 0;
   out_98328488575188110[28] = 0;
   out_98328488575188110[29] = 0;
   out_98328488575188110[30] = 0;
   out_98328488575188110[31] = 0;
   out_98328488575188110[32] = 0;
   out_98328488575188110[33] = 0;
   out_98328488575188110[34] = 0;
   out_98328488575188110[35] = 0;
   out_98328488575188110[36] = 0;
   out_98328488575188110[37] = 0;
   out_98328488575188110[38] = 0;
   out_98328488575188110[39] = 0;
   out_98328488575188110[40] = 0;
   out_98328488575188110[41] = 0;
   out_98328488575188110[42] = 0;
   out_98328488575188110[43] = 0;
   out_98328488575188110[44] = 0;
   out_98328488575188110[45] = 0;
   out_98328488575188110[46] = 0;
   out_98328488575188110[47] = 0;
   out_98328488575188110[48] = 0;
   out_98328488575188110[49] = 1;
   out_98328488575188110[50] = 0;
   out_98328488575188110[51] = 0;
   out_98328488575188110[52] = 0;
   out_98328488575188110[53] = 0;
   out_98328488575188110[54] = 0;
   out_98328488575188110[55] = 0;
   out_98328488575188110[56] = 0;
   out_98328488575188110[57] = 0;
   out_98328488575188110[58] = 0;
   out_98328488575188110[59] = 0;
   out_98328488575188110[60] = 0;
   out_98328488575188110[61] = 0;
   out_98328488575188110[62] = 0;
   out_98328488575188110[63] = 0;
   out_98328488575188110[64] = 0;
   out_98328488575188110[65] = 0;
   out_98328488575188110[66] = 0;
   out_98328488575188110[67] = 0;
   out_98328488575188110[68] = 0;
   out_98328488575188110[69] = 0;
   out_98328488575188110[70] = 0;
   out_98328488575188110[71] = 0;
   out_98328488575188110[72] = 1;
   out_98328488575188110[73] = 0;
   out_98328488575188110[74] = 0;
   out_98328488575188110[75] = 0;
   out_98328488575188110[76] = 0;
   out_98328488575188110[77] = 0;
   out_98328488575188110[78] = 0;
   out_98328488575188110[79] = 0;
   out_98328488575188110[80] = 0;
   out_98328488575188110[81] = 0;
   out_98328488575188110[82] = 0;
   out_98328488575188110[83] = 0;
   out_98328488575188110[84] = 0;
   out_98328488575188110[85] = 0;
   out_98328488575188110[86] = 0;
   out_98328488575188110[87] = 0;
}
void h_13(double *state, double *unused, double *out_1928575231743882511) {
   out_1928575231743882511[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1928575231743882511[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1928575231743882511[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4295954109841081646) {
   out_4295954109841081646[0] = 0;
   out_4295954109841081646[1] = 0;
   out_4295954109841081646[2] = 0;
   out_4295954109841081646[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4295954109841081646[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4295954109841081646[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4295954109841081646[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4295954109841081646[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4295954109841081646[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4295954109841081646[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4295954109841081646[10] = 0;
   out_4295954109841081646[11] = 0;
   out_4295954109841081646[12] = 0;
   out_4295954109841081646[13] = 0;
   out_4295954109841081646[14] = 0;
   out_4295954109841081646[15] = 0;
   out_4295954109841081646[16] = 0;
   out_4295954109841081646[17] = 0;
   out_4295954109841081646[18] = 0;
   out_4295954109841081646[19] = 0;
   out_4295954109841081646[20] = 0;
   out_4295954109841081646[21] = 0;
   out_4295954109841081646[22] = 0;
   out_4295954109841081646[23] = 0;
   out_4295954109841081646[24] = 0;
   out_4295954109841081646[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4295954109841081646[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4295954109841081646[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4295954109841081646[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4295954109841081646[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4295954109841081646[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4295954109841081646[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4295954109841081646[32] = 0;
   out_4295954109841081646[33] = 0;
   out_4295954109841081646[34] = 0;
   out_4295954109841081646[35] = 0;
   out_4295954109841081646[36] = 0;
   out_4295954109841081646[37] = 0;
   out_4295954109841081646[38] = 0;
   out_4295954109841081646[39] = 0;
   out_4295954109841081646[40] = 0;
   out_4295954109841081646[41] = 0;
   out_4295954109841081646[42] = 0;
   out_4295954109841081646[43] = 0;
   out_4295954109841081646[44] = 0;
   out_4295954109841081646[45] = 0;
   out_4295954109841081646[46] = 0;
   out_4295954109841081646[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4295954109841081646[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4295954109841081646[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4295954109841081646[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4295954109841081646[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4295954109841081646[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4295954109841081646[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4295954109841081646[54] = 0;
   out_4295954109841081646[55] = 0;
   out_4295954109841081646[56] = 0;
   out_4295954109841081646[57] = 0;
   out_4295954109841081646[58] = 0;
   out_4295954109841081646[59] = 0;
   out_4295954109841081646[60] = 0;
   out_4295954109841081646[61] = 0;
   out_4295954109841081646[62] = 0;
   out_4295954109841081646[63] = 0;
   out_4295954109841081646[64] = 0;
   out_4295954109841081646[65] = 0;
}
void h_14(double *state, double *unused, double *out_7159739524475622057) {
   out_7159739524475622057[0] = state[10];
   out_7159739524475622057[1] = state[11];
   out_7159739524475622057[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5928825412219954778) {
   out_5928825412219954778[0] = 0;
   out_5928825412219954778[1] = 0;
   out_5928825412219954778[2] = 0;
   out_5928825412219954778[3] = 0;
   out_5928825412219954778[4] = 0;
   out_5928825412219954778[5] = 0;
   out_5928825412219954778[6] = 0;
   out_5928825412219954778[7] = 0;
   out_5928825412219954778[8] = 0;
   out_5928825412219954778[9] = 0;
   out_5928825412219954778[10] = 1;
   out_5928825412219954778[11] = 0;
   out_5928825412219954778[12] = 0;
   out_5928825412219954778[13] = 0;
   out_5928825412219954778[14] = 0;
   out_5928825412219954778[15] = 0;
   out_5928825412219954778[16] = 0;
   out_5928825412219954778[17] = 0;
   out_5928825412219954778[18] = 0;
   out_5928825412219954778[19] = 0;
   out_5928825412219954778[20] = 0;
   out_5928825412219954778[21] = 0;
   out_5928825412219954778[22] = 0;
   out_5928825412219954778[23] = 0;
   out_5928825412219954778[24] = 0;
   out_5928825412219954778[25] = 0;
   out_5928825412219954778[26] = 0;
   out_5928825412219954778[27] = 0;
   out_5928825412219954778[28] = 0;
   out_5928825412219954778[29] = 0;
   out_5928825412219954778[30] = 0;
   out_5928825412219954778[31] = 0;
   out_5928825412219954778[32] = 0;
   out_5928825412219954778[33] = 1;
   out_5928825412219954778[34] = 0;
   out_5928825412219954778[35] = 0;
   out_5928825412219954778[36] = 0;
   out_5928825412219954778[37] = 0;
   out_5928825412219954778[38] = 0;
   out_5928825412219954778[39] = 0;
   out_5928825412219954778[40] = 0;
   out_5928825412219954778[41] = 0;
   out_5928825412219954778[42] = 0;
   out_5928825412219954778[43] = 0;
   out_5928825412219954778[44] = 0;
   out_5928825412219954778[45] = 0;
   out_5928825412219954778[46] = 0;
   out_5928825412219954778[47] = 0;
   out_5928825412219954778[48] = 0;
   out_5928825412219954778[49] = 0;
   out_5928825412219954778[50] = 0;
   out_5928825412219954778[51] = 0;
   out_5928825412219954778[52] = 0;
   out_5928825412219954778[53] = 0;
   out_5928825412219954778[54] = 0;
   out_5928825412219954778[55] = 0;
   out_5928825412219954778[56] = 1;
   out_5928825412219954778[57] = 0;
   out_5928825412219954778[58] = 0;
   out_5928825412219954778[59] = 0;
   out_5928825412219954778[60] = 0;
   out_5928825412219954778[61] = 0;
   out_5928825412219954778[62] = 0;
   out_5928825412219954778[63] = 0;
   out_5928825412219954778[64] = 0;
   out_5928825412219954778[65] = 0;
}
void h_33(double *state, double *unused, double *out_2956601391758169155) {
   out_2956601391758169155[0] = state[16];
   out_2956601391758169155[1] = state[17];
   out_2956601391758169155[2] = state[18];
}
void H_33(double *state, double *unused, double *out_347204003161919557) {
   out_347204003161919557[0] = 0;
   out_347204003161919557[1] = 0;
   out_347204003161919557[2] = 0;
   out_347204003161919557[3] = 0;
   out_347204003161919557[4] = 0;
   out_347204003161919557[5] = 0;
   out_347204003161919557[6] = 0;
   out_347204003161919557[7] = 0;
   out_347204003161919557[8] = 0;
   out_347204003161919557[9] = 0;
   out_347204003161919557[10] = 0;
   out_347204003161919557[11] = 0;
   out_347204003161919557[12] = 0;
   out_347204003161919557[13] = 0;
   out_347204003161919557[14] = 0;
   out_347204003161919557[15] = 0;
   out_347204003161919557[16] = 1;
   out_347204003161919557[17] = 0;
   out_347204003161919557[18] = 0;
   out_347204003161919557[19] = 0;
   out_347204003161919557[20] = 0;
   out_347204003161919557[21] = 0;
   out_347204003161919557[22] = 0;
   out_347204003161919557[23] = 0;
   out_347204003161919557[24] = 0;
   out_347204003161919557[25] = 0;
   out_347204003161919557[26] = 0;
   out_347204003161919557[27] = 0;
   out_347204003161919557[28] = 0;
   out_347204003161919557[29] = 0;
   out_347204003161919557[30] = 0;
   out_347204003161919557[31] = 0;
   out_347204003161919557[32] = 0;
   out_347204003161919557[33] = 0;
   out_347204003161919557[34] = 0;
   out_347204003161919557[35] = 0;
   out_347204003161919557[36] = 0;
   out_347204003161919557[37] = 0;
   out_347204003161919557[38] = 0;
   out_347204003161919557[39] = 1;
   out_347204003161919557[40] = 0;
   out_347204003161919557[41] = 0;
   out_347204003161919557[42] = 0;
   out_347204003161919557[43] = 0;
   out_347204003161919557[44] = 0;
   out_347204003161919557[45] = 0;
   out_347204003161919557[46] = 0;
   out_347204003161919557[47] = 0;
   out_347204003161919557[48] = 0;
   out_347204003161919557[49] = 0;
   out_347204003161919557[50] = 0;
   out_347204003161919557[51] = 0;
   out_347204003161919557[52] = 0;
   out_347204003161919557[53] = 0;
   out_347204003161919557[54] = 0;
   out_347204003161919557[55] = 0;
   out_347204003161919557[56] = 0;
   out_347204003161919557[57] = 0;
   out_347204003161919557[58] = 0;
   out_347204003161919557[59] = 0;
   out_347204003161919557[60] = 0;
   out_347204003161919557[61] = 0;
   out_347204003161919557[62] = 1;
   out_347204003161919557[63] = 0;
   out_347204003161919557[64] = 0;
   out_347204003161919557[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5834698563058751852) {
  H(in_vec, out_5834698563058751852);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4551778613262176225) {
  err_fun(nom_x, delta_x, out_4551778613262176225);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6507307579328985080) {
  inv_err_fun(nom_x, true_x, out_6507307579328985080);
}
void live_H_mod_fun(double *state, double *out_2944519432004620697) {
  H_mod_fun(state, out_2944519432004620697);
}
void live_f_fun(double *state, double dt, double *out_4787033309393199537) {
  f_fun(state,  dt, out_4787033309393199537);
}
void live_F_fun(double *state, double dt, double *out_3436111882846278325) {
  F_fun(state,  dt, out_3436111882846278325);
}
void live_h_4(double *state, double *unused, double *out_9005088952734900117) {
  h_4(state, unused, out_9005088952734900117);
}
void live_H_4(double *state, double *unused, double *out_6170015058849545423) {
  H_4(state, unused, out_6170015058849545423);
}
void live_h_9(double *state, double *unused, double *out_7159739524475622057) {
  h_9(state, unused, out_7159739524475622057);
}
void live_H_9(double *state, double *unused, double *out_5928825412219954778) {
  H_9(state, unused, out_5928825412219954778);
}
void live_h_10(double *state, double *unused, double *out_4714610444686356390) {
  h_10(state, unused, out_4714610444686356390);
}
void live_H_10(double *state, double *unused, double *out_3555931460627110693) {
  H_10(state, unused, out_3555931460627110693);
}
void live_h_12(double *state, double *unused, double *out_282882114802560714) {
  h_12(state, unused, out_282882114802560714);
}
void live_H_12(double *state, double *unused, double *out_5548916033801951756) {
  H_12(state, unused, out_5548916033801951756);
}
void live_h_31(double *state, double *unused, double *out_4420967260717887798) {
  h_31(state, unused, out_4420967260717887798);
}
void live_H_31(double *state, double *unused, double *out_2803353001476938047) {
  H_31(state, unused, out_2803353001476938047);
}
void live_h_32(double *state, double *unused, double *out_7175403914380037657) {
  h_32(state, unused, out_7175403914380037657);
}
void live_H_32(double *state, double *unused, double *out_98328488575188110) {
  H_32(state, unused, out_98328488575188110);
}
void live_h_13(double *state, double *unused, double *out_1928575231743882511) {
  h_13(state, unused, out_1928575231743882511);
}
void live_H_13(double *state, double *unused, double *out_4295954109841081646) {
  H_13(state, unused, out_4295954109841081646);
}
void live_h_14(double *state, double *unused, double *out_7159739524475622057) {
  h_14(state, unused, out_7159739524475622057);
}
void live_H_14(double *state, double *unused, double *out_5928825412219954778) {
  H_14(state, unused, out_5928825412219954778);
}
void live_h_33(double *state, double *unused, double *out_2956601391758169155) {
  h_33(state, unused, out_2956601391758169155);
}
void live_H_33(double *state, double *unused, double *out_347204003161919557) {
  H_33(state, unused, out_347204003161919557);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
