#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6561920401057787819) {
   out_6561920401057787819[0] = 0;
   out_6561920401057787819[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6561920401057787819[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6561920401057787819[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6561920401057787819[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6561920401057787819[5] = -sin(in_vec[1]);
   out_6561920401057787819[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6561920401057787819[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6561920401057787819[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6561920401057787819[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6561920401057787819[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6561920401057787819[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6561920401057787819[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6561920401057787819[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6561920401057787819[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6561920401057787819[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6561920401057787819[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6561920401057787819[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_16477353932622553) {
   out_16477353932622553[0] = delta_x[0] + nom_x[0];
   out_16477353932622553[1] = delta_x[1] + nom_x[1];
   out_16477353932622553[2] = delta_x[2] + nom_x[2];
   out_16477353932622553[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_16477353932622553[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_16477353932622553[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_16477353932622553[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_16477353932622553[7] = delta_x[6] + nom_x[7];
   out_16477353932622553[8] = delta_x[7] + nom_x[8];
   out_16477353932622553[9] = delta_x[8] + nom_x[9];
   out_16477353932622553[10] = delta_x[9] + nom_x[10];
   out_16477353932622553[11] = delta_x[10] + nom_x[11];
   out_16477353932622553[12] = delta_x[11] + nom_x[12];
   out_16477353932622553[13] = delta_x[12] + nom_x[13];
   out_16477353932622553[14] = delta_x[13] + nom_x[14];
   out_16477353932622553[15] = delta_x[14] + nom_x[15];
   out_16477353932622553[16] = delta_x[15] + nom_x[16];
   out_16477353932622553[17] = delta_x[16] + nom_x[17];
   out_16477353932622553[18] = delta_x[17] + nom_x[18];
   out_16477353932622553[19] = delta_x[18] + nom_x[19];
   out_16477353932622553[20] = delta_x[19] + nom_x[20];
   out_16477353932622553[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7785115287148617816) {
   out_7785115287148617816[0] = -nom_x[0] + true_x[0];
   out_7785115287148617816[1] = -nom_x[1] + true_x[1];
   out_7785115287148617816[2] = -nom_x[2] + true_x[2];
   out_7785115287148617816[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7785115287148617816[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7785115287148617816[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7785115287148617816[6] = -nom_x[7] + true_x[7];
   out_7785115287148617816[7] = -nom_x[8] + true_x[8];
   out_7785115287148617816[8] = -nom_x[9] + true_x[9];
   out_7785115287148617816[9] = -nom_x[10] + true_x[10];
   out_7785115287148617816[10] = -nom_x[11] + true_x[11];
   out_7785115287148617816[11] = -nom_x[12] + true_x[12];
   out_7785115287148617816[12] = -nom_x[13] + true_x[13];
   out_7785115287148617816[13] = -nom_x[14] + true_x[14];
   out_7785115287148617816[14] = -nom_x[15] + true_x[15];
   out_7785115287148617816[15] = -nom_x[16] + true_x[16];
   out_7785115287148617816[16] = -nom_x[17] + true_x[17];
   out_7785115287148617816[17] = -nom_x[18] + true_x[18];
   out_7785115287148617816[18] = -nom_x[19] + true_x[19];
   out_7785115287148617816[19] = -nom_x[20] + true_x[20];
   out_7785115287148617816[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5179096700905171275) {
   out_5179096700905171275[0] = 1.0;
   out_5179096700905171275[1] = 0;
   out_5179096700905171275[2] = 0;
   out_5179096700905171275[3] = 0;
   out_5179096700905171275[4] = 0;
   out_5179096700905171275[5] = 0;
   out_5179096700905171275[6] = 0;
   out_5179096700905171275[7] = 0;
   out_5179096700905171275[8] = 0;
   out_5179096700905171275[9] = 0;
   out_5179096700905171275[10] = 0;
   out_5179096700905171275[11] = 0;
   out_5179096700905171275[12] = 0;
   out_5179096700905171275[13] = 0;
   out_5179096700905171275[14] = 0;
   out_5179096700905171275[15] = 0;
   out_5179096700905171275[16] = 0;
   out_5179096700905171275[17] = 0;
   out_5179096700905171275[18] = 0;
   out_5179096700905171275[19] = 0;
   out_5179096700905171275[20] = 0;
   out_5179096700905171275[21] = 0;
   out_5179096700905171275[22] = 1.0;
   out_5179096700905171275[23] = 0;
   out_5179096700905171275[24] = 0;
   out_5179096700905171275[25] = 0;
   out_5179096700905171275[26] = 0;
   out_5179096700905171275[27] = 0;
   out_5179096700905171275[28] = 0;
   out_5179096700905171275[29] = 0;
   out_5179096700905171275[30] = 0;
   out_5179096700905171275[31] = 0;
   out_5179096700905171275[32] = 0;
   out_5179096700905171275[33] = 0;
   out_5179096700905171275[34] = 0;
   out_5179096700905171275[35] = 0;
   out_5179096700905171275[36] = 0;
   out_5179096700905171275[37] = 0;
   out_5179096700905171275[38] = 0;
   out_5179096700905171275[39] = 0;
   out_5179096700905171275[40] = 0;
   out_5179096700905171275[41] = 0;
   out_5179096700905171275[42] = 0;
   out_5179096700905171275[43] = 0;
   out_5179096700905171275[44] = 1.0;
   out_5179096700905171275[45] = 0;
   out_5179096700905171275[46] = 0;
   out_5179096700905171275[47] = 0;
   out_5179096700905171275[48] = 0;
   out_5179096700905171275[49] = 0;
   out_5179096700905171275[50] = 0;
   out_5179096700905171275[51] = 0;
   out_5179096700905171275[52] = 0;
   out_5179096700905171275[53] = 0;
   out_5179096700905171275[54] = 0;
   out_5179096700905171275[55] = 0;
   out_5179096700905171275[56] = 0;
   out_5179096700905171275[57] = 0;
   out_5179096700905171275[58] = 0;
   out_5179096700905171275[59] = 0;
   out_5179096700905171275[60] = 0;
   out_5179096700905171275[61] = 0;
   out_5179096700905171275[62] = 0;
   out_5179096700905171275[63] = 0;
   out_5179096700905171275[64] = 0;
   out_5179096700905171275[65] = 0;
   out_5179096700905171275[66] = -0.5*state[4];
   out_5179096700905171275[67] = -0.5*state[5];
   out_5179096700905171275[68] = -0.5*state[6];
   out_5179096700905171275[69] = 0;
   out_5179096700905171275[70] = 0;
   out_5179096700905171275[71] = 0;
   out_5179096700905171275[72] = 0;
   out_5179096700905171275[73] = 0;
   out_5179096700905171275[74] = 0;
   out_5179096700905171275[75] = 0;
   out_5179096700905171275[76] = 0;
   out_5179096700905171275[77] = 0;
   out_5179096700905171275[78] = 0;
   out_5179096700905171275[79] = 0;
   out_5179096700905171275[80] = 0;
   out_5179096700905171275[81] = 0;
   out_5179096700905171275[82] = 0;
   out_5179096700905171275[83] = 0;
   out_5179096700905171275[84] = 0;
   out_5179096700905171275[85] = 0;
   out_5179096700905171275[86] = 0;
   out_5179096700905171275[87] = 0.5*state[3];
   out_5179096700905171275[88] = 0.5*state[6];
   out_5179096700905171275[89] = -0.5*state[5];
   out_5179096700905171275[90] = 0;
   out_5179096700905171275[91] = 0;
   out_5179096700905171275[92] = 0;
   out_5179096700905171275[93] = 0;
   out_5179096700905171275[94] = 0;
   out_5179096700905171275[95] = 0;
   out_5179096700905171275[96] = 0;
   out_5179096700905171275[97] = 0;
   out_5179096700905171275[98] = 0;
   out_5179096700905171275[99] = 0;
   out_5179096700905171275[100] = 0;
   out_5179096700905171275[101] = 0;
   out_5179096700905171275[102] = 0;
   out_5179096700905171275[103] = 0;
   out_5179096700905171275[104] = 0;
   out_5179096700905171275[105] = 0;
   out_5179096700905171275[106] = 0;
   out_5179096700905171275[107] = 0;
   out_5179096700905171275[108] = -0.5*state[6];
   out_5179096700905171275[109] = 0.5*state[3];
   out_5179096700905171275[110] = 0.5*state[4];
   out_5179096700905171275[111] = 0;
   out_5179096700905171275[112] = 0;
   out_5179096700905171275[113] = 0;
   out_5179096700905171275[114] = 0;
   out_5179096700905171275[115] = 0;
   out_5179096700905171275[116] = 0;
   out_5179096700905171275[117] = 0;
   out_5179096700905171275[118] = 0;
   out_5179096700905171275[119] = 0;
   out_5179096700905171275[120] = 0;
   out_5179096700905171275[121] = 0;
   out_5179096700905171275[122] = 0;
   out_5179096700905171275[123] = 0;
   out_5179096700905171275[124] = 0;
   out_5179096700905171275[125] = 0;
   out_5179096700905171275[126] = 0;
   out_5179096700905171275[127] = 0;
   out_5179096700905171275[128] = 0;
   out_5179096700905171275[129] = 0.5*state[5];
   out_5179096700905171275[130] = -0.5*state[4];
   out_5179096700905171275[131] = 0.5*state[3];
   out_5179096700905171275[132] = 0;
   out_5179096700905171275[133] = 0;
   out_5179096700905171275[134] = 0;
   out_5179096700905171275[135] = 0;
   out_5179096700905171275[136] = 0;
   out_5179096700905171275[137] = 0;
   out_5179096700905171275[138] = 0;
   out_5179096700905171275[139] = 0;
   out_5179096700905171275[140] = 0;
   out_5179096700905171275[141] = 0;
   out_5179096700905171275[142] = 0;
   out_5179096700905171275[143] = 0;
   out_5179096700905171275[144] = 0;
   out_5179096700905171275[145] = 0;
   out_5179096700905171275[146] = 0;
   out_5179096700905171275[147] = 0;
   out_5179096700905171275[148] = 0;
   out_5179096700905171275[149] = 0;
   out_5179096700905171275[150] = 0;
   out_5179096700905171275[151] = 0;
   out_5179096700905171275[152] = 0;
   out_5179096700905171275[153] = 1.0;
   out_5179096700905171275[154] = 0;
   out_5179096700905171275[155] = 0;
   out_5179096700905171275[156] = 0;
   out_5179096700905171275[157] = 0;
   out_5179096700905171275[158] = 0;
   out_5179096700905171275[159] = 0;
   out_5179096700905171275[160] = 0;
   out_5179096700905171275[161] = 0;
   out_5179096700905171275[162] = 0;
   out_5179096700905171275[163] = 0;
   out_5179096700905171275[164] = 0;
   out_5179096700905171275[165] = 0;
   out_5179096700905171275[166] = 0;
   out_5179096700905171275[167] = 0;
   out_5179096700905171275[168] = 0;
   out_5179096700905171275[169] = 0;
   out_5179096700905171275[170] = 0;
   out_5179096700905171275[171] = 0;
   out_5179096700905171275[172] = 0;
   out_5179096700905171275[173] = 0;
   out_5179096700905171275[174] = 0;
   out_5179096700905171275[175] = 1.0;
   out_5179096700905171275[176] = 0;
   out_5179096700905171275[177] = 0;
   out_5179096700905171275[178] = 0;
   out_5179096700905171275[179] = 0;
   out_5179096700905171275[180] = 0;
   out_5179096700905171275[181] = 0;
   out_5179096700905171275[182] = 0;
   out_5179096700905171275[183] = 0;
   out_5179096700905171275[184] = 0;
   out_5179096700905171275[185] = 0;
   out_5179096700905171275[186] = 0;
   out_5179096700905171275[187] = 0;
   out_5179096700905171275[188] = 0;
   out_5179096700905171275[189] = 0;
   out_5179096700905171275[190] = 0;
   out_5179096700905171275[191] = 0;
   out_5179096700905171275[192] = 0;
   out_5179096700905171275[193] = 0;
   out_5179096700905171275[194] = 0;
   out_5179096700905171275[195] = 0;
   out_5179096700905171275[196] = 0;
   out_5179096700905171275[197] = 1.0;
   out_5179096700905171275[198] = 0;
   out_5179096700905171275[199] = 0;
   out_5179096700905171275[200] = 0;
   out_5179096700905171275[201] = 0;
   out_5179096700905171275[202] = 0;
   out_5179096700905171275[203] = 0;
   out_5179096700905171275[204] = 0;
   out_5179096700905171275[205] = 0;
   out_5179096700905171275[206] = 0;
   out_5179096700905171275[207] = 0;
   out_5179096700905171275[208] = 0;
   out_5179096700905171275[209] = 0;
   out_5179096700905171275[210] = 0;
   out_5179096700905171275[211] = 0;
   out_5179096700905171275[212] = 0;
   out_5179096700905171275[213] = 0;
   out_5179096700905171275[214] = 0;
   out_5179096700905171275[215] = 0;
   out_5179096700905171275[216] = 0;
   out_5179096700905171275[217] = 0;
   out_5179096700905171275[218] = 0;
   out_5179096700905171275[219] = 1.0;
   out_5179096700905171275[220] = 0;
   out_5179096700905171275[221] = 0;
   out_5179096700905171275[222] = 0;
   out_5179096700905171275[223] = 0;
   out_5179096700905171275[224] = 0;
   out_5179096700905171275[225] = 0;
   out_5179096700905171275[226] = 0;
   out_5179096700905171275[227] = 0;
   out_5179096700905171275[228] = 0;
   out_5179096700905171275[229] = 0;
   out_5179096700905171275[230] = 0;
   out_5179096700905171275[231] = 0;
   out_5179096700905171275[232] = 0;
   out_5179096700905171275[233] = 0;
   out_5179096700905171275[234] = 0;
   out_5179096700905171275[235] = 0;
   out_5179096700905171275[236] = 0;
   out_5179096700905171275[237] = 0;
   out_5179096700905171275[238] = 0;
   out_5179096700905171275[239] = 0;
   out_5179096700905171275[240] = 0;
   out_5179096700905171275[241] = 1.0;
   out_5179096700905171275[242] = 0;
   out_5179096700905171275[243] = 0;
   out_5179096700905171275[244] = 0;
   out_5179096700905171275[245] = 0;
   out_5179096700905171275[246] = 0;
   out_5179096700905171275[247] = 0;
   out_5179096700905171275[248] = 0;
   out_5179096700905171275[249] = 0;
   out_5179096700905171275[250] = 0;
   out_5179096700905171275[251] = 0;
   out_5179096700905171275[252] = 0;
   out_5179096700905171275[253] = 0;
   out_5179096700905171275[254] = 0;
   out_5179096700905171275[255] = 0;
   out_5179096700905171275[256] = 0;
   out_5179096700905171275[257] = 0;
   out_5179096700905171275[258] = 0;
   out_5179096700905171275[259] = 0;
   out_5179096700905171275[260] = 0;
   out_5179096700905171275[261] = 0;
   out_5179096700905171275[262] = 0;
   out_5179096700905171275[263] = 1.0;
   out_5179096700905171275[264] = 0;
   out_5179096700905171275[265] = 0;
   out_5179096700905171275[266] = 0;
   out_5179096700905171275[267] = 0;
   out_5179096700905171275[268] = 0;
   out_5179096700905171275[269] = 0;
   out_5179096700905171275[270] = 0;
   out_5179096700905171275[271] = 0;
   out_5179096700905171275[272] = 0;
   out_5179096700905171275[273] = 0;
   out_5179096700905171275[274] = 0;
   out_5179096700905171275[275] = 0;
   out_5179096700905171275[276] = 0;
   out_5179096700905171275[277] = 0;
   out_5179096700905171275[278] = 0;
   out_5179096700905171275[279] = 0;
   out_5179096700905171275[280] = 0;
   out_5179096700905171275[281] = 0;
   out_5179096700905171275[282] = 0;
   out_5179096700905171275[283] = 0;
   out_5179096700905171275[284] = 0;
   out_5179096700905171275[285] = 1.0;
   out_5179096700905171275[286] = 0;
   out_5179096700905171275[287] = 0;
   out_5179096700905171275[288] = 0;
   out_5179096700905171275[289] = 0;
   out_5179096700905171275[290] = 0;
   out_5179096700905171275[291] = 0;
   out_5179096700905171275[292] = 0;
   out_5179096700905171275[293] = 0;
   out_5179096700905171275[294] = 0;
   out_5179096700905171275[295] = 0;
   out_5179096700905171275[296] = 0;
   out_5179096700905171275[297] = 0;
   out_5179096700905171275[298] = 0;
   out_5179096700905171275[299] = 0;
   out_5179096700905171275[300] = 0;
   out_5179096700905171275[301] = 0;
   out_5179096700905171275[302] = 0;
   out_5179096700905171275[303] = 0;
   out_5179096700905171275[304] = 0;
   out_5179096700905171275[305] = 0;
   out_5179096700905171275[306] = 0;
   out_5179096700905171275[307] = 1.0;
   out_5179096700905171275[308] = 0;
   out_5179096700905171275[309] = 0;
   out_5179096700905171275[310] = 0;
   out_5179096700905171275[311] = 0;
   out_5179096700905171275[312] = 0;
   out_5179096700905171275[313] = 0;
   out_5179096700905171275[314] = 0;
   out_5179096700905171275[315] = 0;
   out_5179096700905171275[316] = 0;
   out_5179096700905171275[317] = 0;
   out_5179096700905171275[318] = 0;
   out_5179096700905171275[319] = 0;
   out_5179096700905171275[320] = 0;
   out_5179096700905171275[321] = 0;
   out_5179096700905171275[322] = 0;
   out_5179096700905171275[323] = 0;
   out_5179096700905171275[324] = 0;
   out_5179096700905171275[325] = 0;
   out_5179096700905171275[326] = 0;
   out_5179096700905171275[327] = 0;
   out_5179096700905171275[328] = 0;
   out_5179096700905171275[329] = 1.0;
   out_5179096700905171275[330] = 0;
   out_5179096700905171275[331] = 0;
   out_5179096700905171275[332] = 0;
   out_5179096700905171275[333] = 0;
   out_5179096700905171275[334] = 0;
   out_5179096700905171275[335] = 0;
   out_5179096700905171275[336] = 0;
   out_5179096700905171275[337] = 0;
   out_5179096700905171275[338] = 0;
   out_5179096700905171275[339] = 0;
   out_5179096700905171275[340] = 0;
   out_5179096700905171275[341] = 0;
   out_5179096700905171275[342] = 0;
   out_5179096700905171275[343] = 0;
   out_5179096700905171275[344] = 0;
   out_5179096700905171275[345] = 0;
   out_5179096700905171275[346] = 0;
   out_5179096700905171275[347] = 0;
   out_5179096700905171275[348] = 0;
   out_5179096700905171275[349] = 0;
   out_5179096700905171275[350] = 0;
   out_5179096700905171275[351] = 1.0;
   out_5179096700905171275[352] = 0;
   out_5179096700905171275[353] = 0;
   out_5179096700905171275[354] = 0;
   out_5179096700905171275[355] = 0;
   out_5179096700905171275[356] = 0;
   out_5179096700905171275[357] = 0;
   out_5179096700905171275[358] = 0;
   out_5179096700905171275[359] = 0;
   out_5179096700905171275[360] = 0;
   out_5179096700905171275[361] = 0;
   out_5179096700905171275[362] = 0;
   out_5179096700905171275[363] = 0;
   out_5179096700905171275[364] = 0;
   out_5179096700905171275[365] = 0;
   out_5179096700905171275[366] = 0;
   out_5179096700905171275[367] = 0;
   out_5179096700905171275[368] = 0;
   out_5179096700905171275[369] = 0;
   out_5179096700905171275[370] = 0;
   out_5179096700905171275[371] = 0;
   out_5179096700905171275[372] = 0;
   out_5179096700905171275[373] = 1.0;
   out_5179096700905171275[374] = 0;
   out_5179096700905171275[375] = 0;
   out_5179096700905171275[376] = 0;
   out_5179096700905171275[377] = 0;
   out_5179096700905171275[378] = 0;
   out_5179096700905171275[379] = 0;
   out_5179096700905171275[380] = 0;
   out_5179096700905171275[381] = 0;
   out_5179096700905171275[382] = 0;
   out_5179096700905171275[383] = 0;
   out_5179096700905171275[384] = 0;
   out_5179096700905171275[385] = 0;
   out_5179096700905171275[386] = 0;
   out_5179096700905171275[387] = 0;
   out_5179096700905171275[388] = 0;
   out_5179096700905171275[389] = 0;
   out_5179096700905171275[390] = 0;
   out_5179096700905171275[391] = 0;
   out_5179096700905171275[392] = 0;
   out_5179096700905171275[393] = 0;
   out_5179096700905171275[394] = 0;
   out_5179096700905171275[395] = 1.0;
   out_5179096700905171275[396] = 0;
   out_5179096700905171275[397] = 0;
   out_5179096700905171275[398] = 0;
   out_5179096700905171275[399] = 0;
   out_5179096700905171275[400] = 0;
   out_5179096700905171275[401] = 0;
   out_5179096700905171275[402] = 0;
   out_5179096700905171275[403] = 0;
   out_5179096700905171275[404] = 0;
   out_5179096700905171275[405] = 0;
   out_5179096700905171275[406] = 0;
   out_5179096700905171275[407] = 0;
   out_5179096700905171275[408] = 0;
   out_5179096700905171275[409] = 0;
   out_5179096700905171275[410] = 0;
   out_5179096700905171275[411] = 0;
   out_5179096700905171275[412] = 0;
   out_5179096700905171275[413] = 0;
   out_5179096700905171275[414] = 0;
   out_5179096700905171275[415] = 0;
   out_5179096700905171275[416] = 0;
   out_5179096700905171275[417] = 1.0;
   out_5179096700905171275[418] = 0;
   out_5179096700905171275[419] = 0;
   out_5179096700905171275[420] = 0;
   out_5179096700905171275[421] = 0;
   out_5179096700905171275[422] = 0;
   out_5179096700905171275[423] = 0;
   out_5179096700905171275[424] = 0;
   out_5179096700905171275[425] = 0;
   out_5179096700905171275[426] = 0;
   out_5179096700905171275[427] = 0;
   out_5179096700905171275[428] = 0;
   out_5179096700905171275[429] = 0;
   out_5179096700905171275[430] = 0;
   out_5179096700905171275[431] = 0;
   out_5179096700905171275[432] = 0;
   out_5179096700905171275[433] = 0;
   out_5179096700905171275[434] = 0;
   out_5179096700905171275[435] = 0;
   out_5179096700905171275[436] = 0;
   out_5179096700905171275[437] = 0;
   out_5179096700905171275[438] = 0;
   out_5179096700905171275[439] = 1.0;
   out_5179096700905171275[440] = 0;
   out_5179096700905171275[441] = 0;
   out_5179096700905171275[442] = 0;
   out_5179096700905171275[443] = 0;
   out_5179096700905171275[444] = 0;
   out_5179096700905171275[445] = 0;
   out_5179096700905171275[446] = 0;
   out_5179096700905171275[447] = 0;
   out_5179096700905171275[448] = 0;
   out_5179096700905171275[449] = 0;
   out_5179096700905171275[450] = 0;
   out_5179096700905171275[451] = 0;
   out_5179096700905171275[452] = 0;
   out_5179096700905171275[453] = 0;
   out_5179096700905171275[454] = 0;
   out_5179096700905171275[455] = 0;
   out_5179096700905171275[456] = 0;
   out_5179096700905171275[457] = 0;
   out_5179096700905171275[458] = 0;
   out_5179096700905171275[459] = 0;
   out_5179096700905171275[460] = 0;
   out_5179096700905171275[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6097931550597603004) {
   out_6097931550597603004[0] = dt*state[7] + state[0];
   out_6097931550597603004[1] = dt*state[8] + state[1];
   out_6097931550597603004[2] = dt*state[9] + state[2];
   out_6097931550597603004[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6097931550597603004[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6097931550597603004[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6097931550597603004[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6097931550597603004[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6097931550597603004[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6097931550597603004[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6097931550597603004[10] = state[10];
   out_6097931550597603004[11] = state[11];
   out_6097931550597603004[12] = state[12];
   out_6097931550597603004[13] = state[13];
   out_6097931550597603004[14] = state[14];
   out_6097931550597603004[15] = state[15];
   out_6097931550597603004[16] = state[16];
   out_6097931550597603004[17] = state[17];
   out_6097931550597603004[18] = state[18];
   out_6097931550597603004[19] = state[19];
   out_6097931550597603004[20] = state[20];
   out_6097931550597603004[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5981841266691318099) {
   out_5981841266691318099[0] = 1;
   out_5981841266691318099[1] = 0;
   out_5981841266691318099[2] = 0;
   out_5981841266691318099[3] = 0;
   out_5981841266691318099[4] = 0;
   out_5981841266691318099[5] = 0;
   out_5981841266691318099[6] = dt;
   out_5981841266691318099[7] = 0;
   out_5981841266691318099[8] = 0;
   out_5981841266691318099[9] = 0;
   out_5981841266691318099[10] = 0;
   out_5981841266691318099[11] = 0;
   out_5981841266691318099[12] = 0;
   out_5981841266691318099[13] = 0;
   out_5981841266691318099[14] = 0;
   out_5981841266691318099[15] = 0;
   out_5981841266691318099[16] = 0;
   out_5981841266691318099[17] = 0;
   out_5981841266691318099[18] = 0;
   out_5981841266691318099[19] = 0;
   out_5981841266691318099[20] = 0;
   out_5981841266691318099[21] = 0;
   out_5981841266691318099[22] = 1;
   out_5981841266691318099[23] = 0;
   out_5981841266691318099[24] = 0;
   out_5981841266691318099[25] = 0;
   out_5981841266691318099[26] = 0;
   out_5981841266691318099[27] = 0;
   out_5981841266691318099[28] = dt;
   out_5981841266691318099[29] = 0;
   out_5981841266691318099[30] = 0;
   out_5981841266691318099[31] = 0;
   out_5981841266691318099[32] = 0;
   out_5981841266691318099[33] = 0;
   out_5981841266691318099[34] = 0;
   out_5981841266691318099[35] = 0;
   out_5981841266691318099[36] = 0;
   out_5981841266691318099[37] = 0;
   out_5981841266691318099[38] = 0;
   out_5981841266691318099[39] = 0;
   out_5981841266691318099[40] = 0;
   out_5981841266691318099[41] = 0;
   out_5981841266691318099[42] = 0;
   out_5981841266691318099[43] = 0;
   out_5981841266691318099[44] = 1;
   out_5981841266691318099[45] = 0;
   out_5981841266691318099[46] = 0;
   out_5981841266691318099[47] = 0;
   out_5981841266691318099[48] = 0;
   out_5981841266691318099[49] = 0;
   out_5981841266691318099[50] = dt;
   out_5981841266691318099[51] = 0;
   out_5981841266691318099[52] = 0;
   out_5981841266691318099[53] = 0;
   out_5981841266691318099[54] = 0;
   out_5981841266691318099[55] = 0;
   out_5981841266691318099[56] = 0;
   out_5981841266691318099[57] = 0;
   out_5981841266691318099[58] = 0;
   out_5981841266691318099[59] = 0;
   out_5981841266691318099[60] = 0;
   out_5981841266691318099[61] = 0;
   out_5981841266691318099[62] = 0;
   out_5981841266691318099[63] = 0;
   out_5981841266691318099[64] = 0;
   out_5981841266691318099[65] = 0;
   out_5981841266691318099[66] = 1;
   out_5981841266691318099[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5981841266691318099[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5981841266691318099[69] = 0;
   out_5981841266691318099[70] = 0;
   out_5981841266691318099[71] = 0;
   out_5981841266691318099[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5981841266691318099[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981841266691318099[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981841266691318099[75] = 0;
   out_5981841266691318099[76] = 0;
   out_5981841266691318099[77] = 0;
   out_5981841266691318099[78] = 0;
   out_5981841266691318099[79] = 0;
   out_5981841266691318099[80] = 0;
   out_5981841266691318099[81] = 0;
   out_5981841266691318099[82] = 0;
   out_5981841266691318099[83] = 0;
   out_5981841266691318099[84] = 0;
   out_5981841266691318099[85] = 0;
   out_5981841266691318099[86] = 0;
   out_5981841266691318099[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5981841266691318099[88] = 1;
   out_5981841266691318099[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5981841266691318099[90] = 0;
   out_5981841266691318099[91] = 0;
   out_5981841266691318099[92] = 0;
   out_5981841266691318099[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981841266691318099[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5981841266691318099[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981841266691318099[96] = 0;
   out_5981841266691318099[97] = 0;
   out_5981841266691318099[98] = 0;
   out_5981841266691318099[99] = 0;
   out_5981841266691318099[100] = 0;
   out_5981841266691318099[101] = 0;
   out_5981841266691318099[102] = 0;
   out_5981841266691318099[103] = 0;
   out_5981841266691318099[104] = 0;
   out_5981841266691318099[105] = 0;
   out_5981841266691318099[106] = 0;
   out_5981841266691318099[107] = 0;
   out_5981841266691318099[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5981841266691318099[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5981841266691318099[110] = 1;
   out_5981841266691318099[111] = 0;
   out_5981841266691318099[112] = 0;
   out_5981841266691318099[113] = 0;
   out_5981841266691318099[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981841266691318099[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981841266691318099[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5981841266691318099[117] = 0;
   out_5981841266691318099[118] = 0;
   out_5981841266691318099[119] = 0;
   out_5981841266691318099[120] = 0;
   out_5981841266691318099[121] = 0;
   out_5981841266691318099[122] = 0;
   out_5981841266691318099[123] = 0;
   out_5981841266691318099[124] = 0;
   out_5981841266691318099[125] = 0;
   out_5981841266691318099[126] = 0;
   out_5981841266691318099[127] = 0;
   out_5981841266691318099[128] = 0;
   out_5981841266691318099[129] = 0;
   out_5981841266691318099[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5981841266691318099[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5981841266691318099[132] = 1;
   out_5981841266691318099[133] = 0;
   out_5981841266691318099[134] = 0;
   out_5981841266691318099[135] = 0;
   out_5981841266691318099[136] = 0;
   out_5981841266691318099[137] = 0;
   out_5981841266691318099[138] = 0;
   out_5981841266691318099[139] = 0;
   out_5981841266691318099[140] = 0;
   out_5981841266691318099[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5981841266691318099[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981841266691318099[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981841266691318099[144] = 0;
   out_5981841266691318099[145] = 0;
   out_5981841266691318099[146] = 0;
   out_5981841266691318099[147] = 0;
   out_5981841266691318099[148] = 0;
   out_5981841266691318099[149] = 0;
   out_5981841266691318099[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5981841266691318099[151] = 0;
   out_5981841266691318099[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5981841266691318099[153] = 0;
   out_5981841266691318099[154] = 1;
   out_5981841266691318099[155] = 0;
   out_5981841266691318099[156] = 0;
   out_5981841266691318099[157] = 0;
   out_5981841266691318099[158] = 0;
   out_5981841266691318099[159] = 0;
   out_5981841266691318099[160] = 0;
   out_5981841266691318099[161] = 0;
   out_5981841266691318099[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981841266691318099[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5981841266691318099[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981841266691318099[165] = 0;
   out_5981841266691318099[166] = 0;
   out_5981841266691318099[167] = 0;
   out_5981841266691318099[168] = 0;
   out_5981841266691318099[169] = 0;
   out_5981841266691318099[170] = 0;
   out_5981841266691318099[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5981841266691318099[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5981841266691318099[173] = 0;
   out_5981841266691318099[174] = 0;
   out_5981841266691318099[175] = 0;
   out_5981841266691318099[176] = 1;
   out_5981841266691318099[177] = 0;
   out_5981841266691318099[178] = 0;
   out_5981841266691318099[179] = 0;
   out_5981841266691318099[180] = 0;
   out_5981841266691318099[181] = 0;
   out_5981841266691318099[182] = 0;
   out_5981841266691318099[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981841266691318099[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981841266691318099[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5981841266691318099[186] = 0;
   out_5981841266691318099[187] = 0;
   out_5981841266691318099[188] = 0;
   out_5981841266691318099[189] = 0;
   out_5981841266691318099[190] = 0;
   out_5981841266691318099[191] = 0;
   out_5981841266691318099[192] = 0;
   out_5981841266691318099[193] = 0;
   out_5981841266691318099[194] = 0;
   out_5981841266691318099[195] = 0;
   out_5981841266691318099[196] = 0;
   out_5981841266691318099[197] = 0;
   out_5981841266691318099[198] = 1;
   out_5981841266691318099[199] = 0;
   out_5981841266691318099[200] = 0;
   out_5981841266691318099[201] = 0;
   out_5981841266691318099[202] = 0;
   out_5981841266691318099[203] = 0;
   out_5981841266691318099[204] = 0;
   out_5981841266691318099[205] = 0;
   out_5981841266691318099[206] = 0;
   out_5981841266691318099[207] = 0;
   out_5981841266691318099[208] = 0;
   out_5981841266691318099[209] = 0;
   out_5981841266691318099[210] = 0;
   out_5981841266691318099[211] = 0;
   out_5981841266691318099[212] = 0;
   out_5981841266691318099[213] = 0;
   out_5981841266691318099[214] = 0;
   out_5981841266691318099[215] = 0;
   out_5981841266691318099[216] = 0;
   out_5981841266691318099[217] = 0;
   out_5981841266691318099[218] = 0;
   out_5981841266691318099[219] = 0;
   out_5981841266691318099[220] = 1;
   out_5981841266691318099[221] = 0;
   out_5981841266691318099[222] = 0;
   out_5981841266691318099[223] = 0;
   out_5981841266691318099[224] = 0;
   out_5981841266691318099[225] = 0;
   out_5981841266691318099[226] = 0;
   out_5981841266691318099[227] = 0;
   out_5981841266691318099[228] = 0;
   out_5981841266691318099[229] = 0;
   out_5981841266691318099[230] = 0;
   out_5981841266691318099[231] = 0;
   out_5981841266691318099[232] = 0;
   out_5981841266691318099[233] = 0;
   out_5981841266691318099[234] = 0;
   out_5981841266691318099[235] = 0;
   out_5981841266691318099[236] = 0;
   out_5981841266691318099[237] = 0;
   out_5981841266691318099[238] = 0;
   out_5981841266691318099[239] = 0;
   out_5981841266691318099[240] = 0;
   out_5981841266691318099[241] = 0;
   out_5981841266691318099[242] = 1;
   out_5981841266691318099[243] = 0;
   out_5981841266691318099[244] = 0;
   out_5981841266691318099[245] = 0;
   out_5981841266691318099[246] = 0;
   out_5981841266691318099[247] = 0;
   out_5981841266691318099[248] = 0;
   out_5981841266691318099[249] = 0;
   out_5981841266691318099[250] = 0;
   out_5981841266691318099[251] = 0;
   out_5981841266691318099[252] = 0;
   out_5981841266691318099[253] = 0;
   out_5981841266691318099[254] = 0;
   out_5981841266691318099[255] = 0;
   out_5981841266691318099[256] = 0;
   out_5981841266691318099[257] = 0;
   out_5981841266691318099[258] = 0;
   out_5981841266691318099[259] = 0;
   out_5981841266691318099[260] = 0;
   out_5981841266691318099[261] = 0;
   out_5981841266691318099[262] = 0;
   out_5981841266691318099[263] = 0;
   out_5981841266691318099[264] = 1;
   out_5981841266691318099[265] = 0;
   out_5981841266691318099[266] = 0;
   out_5981841266691318099[267] = 0;
   out_5981841266691318099[268] = 0;
   out_5981841266691318099[269] = 0;
   out_5981841266691318099[270] = 0;
   out_5981841266691318099[271] = 0;
   out_5981841266691318099[272] = 0;
   out_5981841266691318099[273] = 0;
   out_5981841266691318099[274] = 0;
   out_5981841266691318099[275] = 0;
   out_5981841266691318099[276] = 0;
   out_5981841266691318099[277] = 0;
   out_5981841266691318099[278] = 0;
   out_5981841266691318099[279] = 0;
   out_5981841266691318099[280] = 0;
   out_5981841266691318099[281] = 0;
   out_5981841266691318099[282] = 0;
   out_5981841266691318099[283] = 0;
   out_5981841266691318099[284] = 0;
   out_5981841266691318099[285] = 0;
   out_5981841266691318099[286] = 1;
   out_5981841266691318099[287] = 0;
   out_5981841266691318099[288] = 0;
   out_5981841266691318099[289] = 0;
   out_5981841266691318099[290] = 0;
   out_5981841266691318099[291] = 0;
   out_5981841266691318099[292] = 0;
   out_5981841266691318099[293] = 0;
   out_5981841266691318099[294] = 0;
   out_5981841266691318099[295] = 0;
   out_5981841266691318099[296] = 0;
   out_5981841266691318099[297] = 0;
   out_5981841266691318099[298] = 0;
   out_5981841266691318099[299] = 0;
   out_5981841266691318099[300] = 0;
   out_5981841266691318099[301] = 0;
   out_5981841266691318099[302] = 0;
   out_5981841266691318099[303] = 0;
   out_5981841266691318099[304] = 0;
   out_5981841266691318099[305] = 0;
   out_5981841266691318099[306] = 0;
   out_5981841266691318099[307] = 0;
   out_5981841266691318099[308] = 1;
   out_5981841266691318099[309] = 0;
   out_5981841266691318099[310] = 0;
   out_5981841266691318099[311] = 0;
   out_5981841266691318099[312] = 0;
   out_5981841266691318099[313] = 0;
   out_5981841266691318099[314] = 0;
   out_5981841266691318099[315] = 0;
   out_5981841266691318099[316] = 0;
   out_5981841266691318099[317] = 0;
   out_5981841266691318099[318] = 0;
   out_5981841266691318099[319] = 0;
   out_5981841266691318099[320] = 0;
   out_5981841266691318099[321] = 0;
   out_5981841266691318099[322] = 0;
   out_5981841266691318099[323] = 0;
   out_5981841266691318099[324] = 0;
   out_5981841266691318099[325] = 0;
   out_5981841266691318099[326] = 0;
   out_5981841266691318099[327] = 0;
   out_5981841266691318099[328] = 0;
   out_5981841266691318099[329] = 0;
   out_5981841266691318099[330] = 1;
   out_5981841266691318099[331] = 0;
   out_5981841266691318099[332] = 0;
   out_5981841266691318099[333] = 0;
   out_5981841266691318099[334] = 0;
   out_5981841266691318099[335] = 0;
   out_5981841266691318099[336] = 0;
   out_5981841266691318099[337] = 0;
   out_5981841266691318099[338] = 0;
   out_5981841266691318099[339] = 0;
   out_5981841266691318099[340] = 0;
   out_5981841266691318099[341] = 0;
   out_5981841266691318099[342] = 0;
   out_5981841266691318099[343] = 0;
   out_5981841266691318099[344] = 0;
   out_5981841266691318099[345] = 0;
   out_5981841266691318099[346] = 0;
   out_5981841266691318099[347] = 0;
   out_5981841266691318099[348] = 0;
   out_5981841266691318099[349] = 0;
   out_5981841266691318099[350] = 0;
   out_5981841266691318099[351] = 0;
   out_5981841266691318099[352] = 1;
   out_5981841266691318099[353] = 0;
   out_5981841266691318099[354] = 0;
   out_5981841266691318099[355] = 0;
   out_5981841266691318099[356] = 0;
   out_5981841266691318099[357] = 0;
   out_5981841266691318099[358] = 0;
   out_5981841266691318099[359] = 0;
   out_5981841266691318099[360] = 0;
   out_5981841266691318099[361] = 0;
   out_5981841266691318099[362] = 0;
   out_5981841266691318099[363] = 0;
   out_5981841266691318099[364] = 0;
   out_5981841266691318099[365] = 0;
   out_5981841266691318099[366] = 0;
   out_5981841266691318099[367] = 0;
   out_5981841266691318099[368] = 0;
   out_5981841266691318099[369] = 0;
   out_5981841266691318099[370] = 0;
   out_5981841266691318099[371] = 0;
   out_5981841266691318099[372] = 0;
   out_5981841266691318099[373] = 0;
   out_5981841266691318099[374] = 1;
   out_5981841266691318099[375] = 0;
   out_5981841266691318099[376] = 0;
   out_5981841266691318099[377] = 0;
   out_5981841266691318099[378] = 0;
   out_5981841266691318099[379] = 0;
   out_5981841266691318099[380] = 0;
   out_5981841266691318099[381] = 0;
   out_5981841266691318099[382] = 0;
   out_5981841266691318099[383] = 0;
   out_5981841266691318099[384] = 0;
   out_5981841266691318099[385] = 0;
   out_5981841266691318099[386] = 0;
   out_5981841266691318099[387] = 0;
   out_5981841266691318099[388] = 0;
   out_5981841266691318099[389] = 0;
   out_5981841266691318099[390] = 0;
   out_5981841266691318099[391] = 0;
   out_5981841266691318099[392] = 0;
   out_5981841266691318099[393] = 0;
   out_5981841266691318099[394] = 0;
   out_5981841266691318099[395] = 0;
   out_5981841266691318099[396] = 1;
   out_5981841266691318099[397] = 0;
   out_5981841266691318099[398] = 0;
   out_5981841266691318099[399] = 0;
   out_5981841266691318099[400] = 0;
   out_5981841266691318099[401] = 0;
   out_5981841266691318099[402] = 0;
   out_5981841266691318099[403] = 0;
   out_5981841266691318099[404] = 0;
   out_5981841266691318099[405] = 0;
   out_5981841266691318099[406] = 0;
   out_5981841266691318099[407] = 0;
   out_5981841266691318099[408] = 0;
   out_5981841266691318099[409] = 0;
   out_5981841266691318099[410] = 0;
   out_5981841266691318099[411] = 0;
   out_5981841266691318099[412] = 0;
   out_5981841266691318099[413] = 0;
   out_5981841266691318099[414] = 0;
   out_5981841266691318099[415] = 0;
   out_5981841266691318099[416] = 0;
   out_5981841266691318099[417] = 0;
   out_5981841266691318099[418] = 1;
   out_5981841266691318099[419] = 0;
   out_5981841266691318099[420] = 0;
   out_5981841266691318099[421] = 0;
   out_5981841266691318099[422] = 0;
   out_5981841266691318099[423] = 0;
   out_5981841266691318099[424] = 0;
   out_5981841266691318099[425] = 0;
   out_5981841266691318099[426] = 0;
   out_5981841266691318099[427] = 0;
   out_5981841266691318099[428] = 0;
   out_5981841266691318099[429] = 0;
   out_5981841266691318099[430] = 0;
   out_5981841266691318099[431] = 0;
   out_5981841266691318099[432] = 0;
   out_5981841266691318099[433] = 0;
   out_5981841266691318099[434] = 0;
   out_5981841266691318099[435] = 0;
   out_5981841266691318099[436] = 0;
   out_5981841266691318099[437] = 0;
   out_5981841266691318099[438] = 0;
   out_5981841266691318099[439] = 0;
   out_5981841266691318099[440] = 1;
}
void h_4(double *state, double *unused, double *out_9198479962028836947) {
   out_9198479962028836947[0] = state[10] + state[13];
   out_9198479962028836947[1] = state[11] + state[14];
   out_9198479962028836947[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6281287427493777947) {
   out_6281287427493777947[0] = 0;
   out_6281287427493777947[1] = 0;
   out_6281287427493777947[2] = 0;
   out_6281287427493777947[3] = 0;
   out_6281287427493777947[4] = 0;
   out_6281287427493777947[5] = 0;
   out_6281287427493777947[6] = 0;
   out_6281287427493777947[7] = 0;
   out_6281287427493777947[8] = 0;
   out_6281287427493777947[9] = 0;
   out_6281287427493777947[10] = 1;
   out_6281287427493777947[11] = 0;
   out_6281287427493777947[12] = 0;
   out_6281287427493777947[13] = 1;
   out_6281287427493777947[14] = 0;
   out_6281287427493777947[15] = 0;
   out_6281287427493777947[16] = 0;
   out_6281287427493777947[17] = 0;
   out_6281287427493777947[18] = 0;
   out_6281287427493777947[19] = 0;
   out_6281287427493777947[20] = 0;
   out_6281287427493777947[21] = 0;
   out_6281287427493777947[22] = 0;
   out_6281287427493777947[23] = 0;
   out_6281287427493777947[24] = 0;
   out_6281287427493777947[25] = 0;
   out_6281287427493777947[26] = 0;
   out_6281287427493777947[27] = 0;
   out_6281287427493777947[28] = 0;
   out_6281287427493777947[29] = 0;
   out_6281287427493777947[30] = 0;
   out_6281287427493777947[31] = 0;
   out_6281287427493777947[32] = 0;
   out_6281287427493777947[33] = 1;
   out_6281287427493777947[34] = 0;
   out_6281287427493777947[35] = 0;
   out_6281287427493777947[36] = 1;
   out_6281287427493777947[37] = 0;
   out_6281287427493777947[38] = 0;
   out_6281287427493777947[39] = 0;
   out_6281287427493777947[40] = 0;
   out_6281287427493777947[41] = 0;
   out_6281287427493777947[42] = 0;
   out_6281287427493777947[43] = 0;
   out_6281287427493777947[44] = 0;
   out_6281287427493777947[45] = 0;
   out_6281287427493777947[46] = 0;
   out_6281287427493777947[47] = 0;
   out_6281287427493777947[48] = 0;
   out_6281287427493777947[49] = 0;
   out_6281287427493777947[50] = 0;
   out_6281287427493777947[51] = 0;
   out_6281287427493777947[52] = 0;
   out_6281287427493777947[53] = 0;
   out_6281287427493777947[54] = 0;
   out_6281287427493777947[55] = 0;
   out_6281287427493777947[56] = 1;
   out_6281287427493777947[57] = 0;
   out_6281287427493777947[58] = 0;
   out_6281287427493777947[59] = 1;
   out_6281287427493777947[60] = 0;
   out_6281287427493777947[61] = 0;
   out_6281287427493777947[62] = 0;
   out_6281287427493777947[63] = 0;
   out_6281287427493777947[64] = 0;
   out_6281287427493777947[65] = 0;
}
void h_9(double *state, double *unused, double *out_2057064782794859210) {
   out_2057064782794859210[0] = state[10];
   out_2057064782794859210[1] = state[11];
   out_2057064782794859210[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6040097780864187302) {
   out_6040097780864187302[0] = 0;
   out_6040097780864187302[1] = 0;
   out_6040097780864187302[2] = 0;
   out_6040097780864187302[3] = 0;
   out_6040097780864187302[4] = 0;
   out_6040097780864187302[5] = 0;
   out_6040097780864187302[6] = 0;
   out_6040097780864187302[7] = 0;
   out_6040097780864187302[8] = 0;
   out_6040097780864187302[9] = 0;
   out_6040097780864187302[10] = 1;
   out_6040097780864187302[11] = 0;
   out_6040097780864187302[12] = 0;
   out_6040097780864187302[13] = 0;
   out_6040097780864187302[14] = 0;
   out_6040097780864187302[15] = 0;
   out_6040097780864187302[16] = 0;
   out_6040097780864187302[17] = 0;
   out_6040097780864187302[18] = 0;
   out_6040097780864187302[19] = 0;
   out_6040097780864187302[20] = 0;
   out_6040097780864187302[21] = 0;
   out_6040097780864187302[22] = 0;
   out_6040097780864187302[23] = 0;
   out_6040097780864187302[24] = 0;
   out_6040097780864187302[25] = 0;
   out_6040097780864187302[26] = 0;
   out_6040097780864187302[27] = 0;
   out_6040097780864187302[28] = 0;
   out_6040097780864187302[29] = 0;
   out_6040097780864187302[30] = 0;
   out_6040097780864187302[31] = 0;
   out_6040097780864187302[32] = 0;
   out_6040097780864187302[33] = 1;
   out_6040097780864187302[34] = 0;
   out_6040097780864187302[35] = 0;
   out_6040097780864187302[36] = 0;
   out_6040097780864187302[37] = 0;
   out_6040097780864187302[38] = 0;
   out_6040097780864187302[39] = 0;
   out_6040097780864187302[40] = 0;
   out_6040097780864187302[41] = 0;
   out_6040097780864187302[42] = 0;
   out_6040097780864187302[43] = 0;
   out_6040097780864187302[44] = 0;
   out_6040097780864187302[45] = 0;
   out_6040097780864187302[46] = 0;
   out_6040097780864187302[47] = 0;
   out_6040097780864187302[48] = 0;
   out_6040097780864187302[49] = 0;
   out_6040097780864187302[50] = 0;
   out_6040097780864187302[51] = 0;
   out_6040097780864187302[52] = 0;
   out_6040097780864187302[53] = 0;
   out_6040097780864187302[54] = 0;
   out_6040097780864187302[55] = 0;
   out_6040097780864187302[56] = 1;
   out_6040097780864187302[57] = 0;
   out_6040097780864187302[58] = 0;
   out_6040097780864187302[59] = 0;
   out_6040097780864187302[60] = 0;
   out_6040097780864187302[61] = 0;
   out_6040097780864187302[62] = 0;
   out_6040097780864187302[63] = 0;
   out_6040097780864187302[64] = 0;
   out_6040097780864187302[65] = 0;
}
void h_10(double *state, double *unused, double *out_1204215357562160093) {
   out_1204215357562160093[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1204215357562160093[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1204215357562160093[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1900819658776085935) {
   out_1900819658776085935[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1900819658776085935[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1900819658776085935[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1900819658776085935[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1900819658776085935[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1900819658776085935[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1900819658776085935[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1900819658776085935[7] = 0;
   out_1900819658776085935[8] = 0;
   out_1900819658776085935[9] = 0;
   out_1900819658776085935[10] = 0;
   out_1900819658776085935[11] = 0;
   out_1900819658776085935[12] = 0;
   out_1900819658776085935[13] = 0;
   out_1900819658776085935[14] = 0;
   out_1900819658776085935[15] = 0;
   out_1900819658776085935[16] = 1;
   out_1900819658776085935[17] = 0;
   out_1900819658776085935[18] = 0;
   out_1900819658776085935[19] = 1;
   out_1900819658776085935[20] = 0;
   out_1900819658776085935[21] = 0;
   out_1900819658776085935[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1900819658776085935[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1900819658776085935[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1900819658776085935[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1900819658776085935[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1900819658776085935[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1900819658776085935[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1900819658776085935[29] = 0;
   out_1900819658776085935[30] = 0;
   out_1900819658776085935[31] = 0;
   out_1900819658776085935[32] = 0;
   out_1900819658776085935[33] = 0;
   out_1900819658776085935[34] = 0;
   out_1900819658776085935[35] = 0;
   out_1900819658776085935[36] = 0;
   out_1900819658776085935[37] = 0;
   out_1900819658776085935[38] = 0;
   out_1900819658776085935[39] = 1;
   out_1900819658776085935[40] = 0;
   out_1900819658776085935[41] = 0;
   out_1900819658776085935[42] = 1;
   out_1900819658776085935[43] = 0;
   out_1900819658776085935[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1900819658776085935[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1900819658776085935[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1900819658776085935[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1900819658776085935[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1900819658776085935[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1900819658776085935[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1900819658776085935[51] = 0;
   out_1900819658776085935[52] = 0;
   out_1900819658776085935[53] = 0;
   out_1900819658776085935[54] = 0;
   out_1900819658776085935[55] = 0;
   out_1900819658776085935[56] = 0;
   out_1900819658776085935[57] = 0;
   out_1900819658776085935[58] = 0;
   out_1900819658776085935[59] = 0;
   out_1900819658776085935[60] = 0;
   out_1900819658776085935[61] = 0;
   out_1900819658776085935[62] = 1;
   out_1900819658776085935[63] = 0;
   out_1900819658776085935[64] = 0;
   out_1900819658776085935[65] = 1;
}
void h_12(double *state, double *unused, double *out_629444147086537644) {
   out_629444147086537644[0] = state[0];
   out_629444147086537644[1] = state[1];
   out_629444147086537644[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1261831019461816152) {
   out_1261831019461816152[0] = 1;
   out_1261831019461816152[1] = 0;
   out_1261831019461816152[2] = 0;
   out_1261831019461816152[3] = 0;
   out_1261831019461816152[4] = 0;
   out_1261831019461816152[5] = 0;
   out_1261831019461816152[6] = 0;
   out_1261831019461816152[7] = 0;
   out_1261831019461816152[8] = 0;
   out_1261831019461816152[9] = 0;
   out_1261831019461816152[10] = 0;
   out_1261831019461816152[11] = 0;
   out_1261831019461816152[12] = 0;
   out_1261831019461816152[13] = 0;
   out_1261831019461816152[14] = 0;
   out_1261831019461816152[15] = 0;
   out_1261831019461816152[16] = 0;
   out_1261831019461816152[17] = 0;
   out_1261831019461816152[18] = 0;
   out_1261831019461816152[19] = 0;
   out_1261831019461816152[20] = 0;
   out_1261831019461816152[21] = 0;
   out_1261831019461816152[22] = 0;
   out_1261831019461816152[23] = 1;
   out_1261831019461816152[24] = 0;
   out_1261831019461816152[25] = 0;
   out_1261831019461816152[26] = 0;
   out_1261831019461816152[27] = 0;
   out_1261831019461816152[28] = 0;
   out_1261831019461816152[29] = 0;
   out_1261831019461816152[30] = 0;
   out_1261831019461816152[31] = 0;
   out_1261831019461816152[32] = 0;
   out_1261831019461816152[33] = 0;
   out_1261831019461816152[34] = 0;
   out_1261831019461816152[35] = 0;
   out_1261831019461816152[36] = 0;
   out_1261831019461816152[37] = 0;
   out_1261831019461816152[38] = 0;
   out_1261831019461816152[39] = 0;
   out_1261831019461816152[40] = 0;
   out_1261831019461816152[41] = 0;
   out_1261831019461816152[42] = 0;
   out_1261831019461816152[43] = 0;
   out_1261831019461816152[44] = 0;
   out_1261831019461816152[45] = 0;
   out_1261831019461816152[46] = 1;
   out_1261831019461816152[47] = 0;
   out_1261831019461816152[48] = 0;
   out_1261831019461816152[49] = 0;
   out_1261831019461816152[50] = 0;
   out_1261831019461816152[51] = 0;
   out_1261831019461816152[52] = 0;
   out_1261831019461816152[53] = 0;
   out_1261831019461816152[54] = 0;
   out_1261831019461816152[55] = 0;
   out_1261831019461816152[56] = 0;
   out_1261831019461816152[57] = 0;
   out_1261831019461816152[58] = 0;
   out_1261831019461816152[59] = 0;
   out_1261831019461816152[60] = 0;
   out_1261831019461816152[61] = 0;
   out_1261831019461816152[62] = 0;
   out_1261831019461816152[63] = 0;
   out_1261831019461816152[64] = 0;
   out_1261831019461816152[65] = 0;
}
void h_31(double *state, double *unused, double *out_7427230565770690149) {
   out_7427230565770690149[0] = state[7];
   out_7427230565770690149[1] = state[8];
   out_7427230565770690149[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2914625370121170571) {
   out_2914625370121170571[0] = 0;
   out_2914625370121170571[1] = 0;
   out_2914625370121170571[2] = 0;
   out_2914625370121170571[3] = 0;
   out_2914625370121170571[4] = 0;
   out_2914625370121170571[5] = 0;
   out_2914625370121170571[6] = 0;
   out_2914625370121170571[7] = 1;
   out_2914625370121170571[8] = 0;
   out_2914625370121170571[9] = 0;
   out_2914625370121170571[10] = 0;
   out_2914625370121170571[11] = 0;
   out_2914625370121170571[12] = 0;
   out_2914625370121170571[13] = 0;
   out_2914625370121170571[14] = 0;
   out_2914625370121170571[15] = 0;
   out_2914625370121170571[16] = 0;
   out_2914625370121170571[17] = 0;
   out_2914625370121170571[18] = 0;
   out_2914625370121170571[19] = 0;
   out_2914625370121170571[20] = 0;
   out_2914625370121170571[21] = 0;
   out_2914625370121170571[22] = 0;
   out_2914625370121170571[23] = 0;
   out_2914625370121170571[24] = 0;
   out_2914625370121170571[25] = 0;
   out_2914625370121170571[26] = 0;
   out_2914625370121170571[27] = 0;
   out_2914625370121170571[28] = 0;
   out_2914625370121170571[29] = 0;
   out_2914625370121170571[30] = 1;
   out_2914625370121170571[31] = 0;
   out_2914625370121170571[32] = 0;
   out_2914625370121170571[33] = 0;
   out_2914625370121170571[34] = 0;
   out_2914625370121170571[35] = 0;
   out_2914625370121170571[36] = 0;
   out_2914625370121170571[37] = 0;
   out_2914625370121170571[38] = 0;
   out_2914625370121170571[39] = 0;
   out_2914625370121170571[40] = 0;
   out_2914625370121170571[41] = 0;
   out_2914625370121170571[42] = 0;
   out_2914625370121170571[43] = 0;
   out_2914625370121170571[44] = 0;
   out_2914625370121170571[45] = 0;
   out_2914625370121170571[46] = 0;
   out_2914625370121170571[47] = 0;
   out_2914625370121170571[48] = 0;
   out_2914625370121170571[49] = 0;
   out_2914625370121170571[50] = 0;
   out_2914625370121170571[51] = 0;
   out_2914625370121170571[52] = 0;
   out_2914625370121170571[53] = 1;
   out_2914625370121170571[54] = 0;
   out_2914625370121170571[55] = 0;
   out_2914625370121170571[56] = 0;
   out_2914625370121170571[57] = 0;
   out_2914625370121170571[58] = 0;
   out_2914625370121170571[59] = 0;
   out_2914625370121170571[60] = 0;
   out_2914625370121170571[61] = 0;
   out_2914625370121170571[62] = 0;
   out_2914625370121170571[63] = 0;
   out_2914625370121170571[64] = 0;
   out_2914625370121170571[65] = 0;
}
void h_32(double *state, double *unused, double *out_8420318723687336568) {
   out_8420318723687336568[0] = state[3];
   out_8420318723687336568[1] = state[4];
   out_8420318723687336568[2] = state[5];
   out_8420318723687336568[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5801106792969625067) {
   out_5801106792969625067[0] = 0;
   out_5801106792969625067[1] = 0;
   out_5801106792969625067[2] = 0;
   out_5801106792969625067[3] = 1;
   out_5801106792969625067[4] = 0;
   out_5801106792969625067[5] = 0;
   out_5801106792969625067[6] = 0;
   out_5801106792969625067[7] = 0;
   out_5801106792969625067[8] = 0;
   out_5801106792969625067[9] = 0;
   out_5801106792969625067[10] = 0;
   out_5801106792969625067[11] = 0;
   out_5801106792969625067[12] = 0;
   out_5801106792969625067[13] = 0;
   out_5801106792969625067[14] = 0;
   out_5801106792969625067[15] = 0;
   out_5801106792969625067[16] = 0;
   out_5801106792969625067[17] = 0;
   out_5801106792969625067[18] = 0;
   out_5801106792969625067[19] = 0;
   out_5801106792969625067[20] = 0;
   out_5801106792969625067[21] = 0;
   out_5801106792969625067[22] = 0;
   out_5801106792969625067[23] = 0;
   out_5801106792969625067[24] = 0;
   out_5801106792969625067[25] = 0;
   out_5801106792969625067[26] = 1;
   out_5801106792969625067[27] = 0;
   out_5801106792969625067[28] = 0;
   out_5801106792969625067[29] = 0;
   out_5801106792969625067[30] = 0;
   out_5801106792969625067[31] = 0;
   out_5801106792969625067[32] = 0;
   out_5801106792969625067[33] = 0;
   out_5801106792969625067[34] = 0;
   out_5801106792969625067[35] = 0;
   out_5801106792969625067[36] = 0;
   out_5801106792969625067[37] = 0;
   out_5801106792969625067[38] = 0;
   out_5801106792969625067[39] = 0;
   out_5801106792969625067[40] = 0;
   out_5801106792969625067[41] = 0;
   out_5801106792969625067[42] = 0;
   out_5801106792969625067[43] = 0;
   out_5801106792969625067[44] = 0;
   out_5801106792969625067[45] = 0;
   out_5801106792969625067[46] = 0;
   out_5801106792969625067[47] = 0;
   out_5801106792969625067[48] = 0;
   out_5801106792969625067[49] = 1;
   out_5801106792969625067[50] = 0;
   out_5801106792969625067[51] = 0;
   out_5801106792969625067[52] = 0;
   out_5801106792969625067[53] = 0;
   out_5801106792969625067[54] = 0;
   out_5801106792969625067[55] = 0;
   out_5801106792969625067[56] = 0;
   out_5801106792969625067[57] = 0;
   out_5801106792969625067[58] = 0;
   out_5801106792969625067[59] = 0;
   out_5801106792969625067[60] = 0;
   out_5801106792969625067[61] = 0;
   out_5801106792969625067[62] = 0;
   out_5801106792969625067[63] = 0;
   out_5801106792969625067[64] = 0;
   out_5801106792969625067[65] = 0;
   out_5801106792969625067[66] = 0;
   out_5801106792969625067[67] = 0;
   out_5801106792969625067[68] = 0;
   out_5801106792969625067[69] = 0;
   out_5801106792969625067[70] = 0;
   out_5801106792969625067[71] = 0;
   out_5801106792969625067[72] = 1;
   out_5801106792969625067[73] = 0;
   out_5801106792969625067[74] = 0;
   out_5801106792969625067[75] = 0;
   out_5801106792969625067[76] = 0;
   out_5801106792969625067[77] = 0;
   out_5801106792969625067[78] = 0;
   out_5801106792969625067[79] = 0;
   out_5801106792969625067[80] = 0;
   out_5801106792969625067[81] = 0;
   out_5801106792969625067[82] = 0;
   out_5801106792969625067[83] = 0;
   out_5801106792969625067[84] = 0;
   out_5801106792969625067[85] = 0;
   out_5801106792969625067[86] = 0;
   out_5801106792969625067[87] = 0;
}
void h_13(double *state, double *unused, double *out_5658429962566026922) {
   out_5658429962566026922[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5658429962566026922[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5658429962566026922[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7350297393207904790) {
   out_7350297393207904790[0] = 0;
   out_7350297393207904790[1] = 0;
   out_7350297393207904790[2] = 0;
   out_7350297393207904790[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7350297393207904790[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7350297393207904790[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7350297393207904790[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7350297393207904790[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7350297393207904790[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7350297393207904790[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7350297393207904790[10] = 0;
   out_7350297393207904790[11] = 0;
   out_7350297393207904790[12] = 0;
   out_7350297393207904790[13] = 0;
   out_7350297393207904790[14] = 0;
   out_7350297393207904790[15] = 0;
   out_7350297393207904790[16] = 0;
   out_7350297393207904790[17] = 0;
   out_7350297393207904790[18] = 0;
   out_7350297393207904790[19] = 0;
   out_7350297393207904790[20] = 0;
   out_7350297393207904790[21] = 0;
   out_7350297393207904790[22] = 0;
   out_7350297393207904790[23] = 0;
   out_7350297393207904790[24] = 0;
   out_7350297393207904790[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7350297393207904790[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7350297393207904790[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7350297393207904790[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7350297393207904790[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7350297393207904790[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7350297393207904790[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7350297393207904790[32] = 0;
   out_7350297393207904790[33] = 0;
   out_7350297393207904790[34] = 0;
   out_7350297393207904790[35] = 0;
   out_7350297393207904790[36] = 0;
   out_7350297393207904790[37] = 0;
   out_7350297393207904790[38] = 0;
   out_7350297393207904790[39] = 0;
   out_7350297393207904790[40] = 0;
   out_7350297393207904790[41] = 0;
   out_7350297393207904790[42] = 0;
   out_7350297393207904790[43] = 0;
   out_7350297393207904790[44] = 0;
   out_7350297393207904790[45] = 0;
   out_7350297393207904790[46] = 0;
   out_7350297393207904790[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7350297393207904790[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7350297393207904790[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7350297393207904790[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7350297393207904790[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7350297393207904790[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7350297393207904790[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7350297393207904790[54] = 0;
   out_7350297393207904790[55] = 0;
   out_7350297393207904790[56] = 0;
   out_7350297393207904790[57] = 0;
   out_7350297393207904790[58] = 0;
   out_7350297393207904790[59] = 0;
   out_7350297393207904790[60] = 0;
   out_7350297393207904790[61] = 0;
   out_7350297393207904790[62] = 0;
   out_7350297393207904790[63] = 0;
   out_7350297393207904790[64] = 0;
   out_7350297393207904790[65] = 0;
}
void h_14(double *state, double *unused, double *out_2057064782794859210) {
   out_2057064782794859210[0] = state[10];
   out_2057064782794859210[1] = state[11];
   out_2057064782794859210[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6040097780864187302) {
   out_6040097780864187302[0] = 0;
   out_6040097780864187302[1] = 0;
   out_6040097780864187302[2] = 0;
   out_6040097780864187302[3] = 0;
   out_6040097780864187302[4] = 0;
   out_6040097780864187302[5] = 0;
   out_6040097780864187302[6] = 0;
   out_6040097780864187302[7] = 0;
   out_6040097780864187302[8] = 0;
   out_6040097780864187302[9] = 0;
   out_6040097780864187302[10] = 1;
   out_6040097780864187302[11] = 0;
   out_6040097780864187302[12] = 0;
   out_6040097780864187302[13] = 0;
   out_6040097780864187302[14] = 0;
   out_6040097780864187302[15] = 0;
   out_6040097780864187302[16] = 0;
   out_6040097780864187302[17] = 0;
   out_6040097780864187302[18] = 0;
   out_6040097780864187302[19] = 0;
   out_6040097780864187302[20] = 0;
   out_6040097780864187302[21] = 0;
   out_6040097780864187302[22] = 0;
   out_6040097780864187302[23] = 0;
   out_6040097780864187302[24] = 0;
   out_6040097780864187302[25] = 0;
   out_6040097780864187302[26] = 0;
   out_6040097780864187302[27] = 0;
   out_6040097780864187302[28] = 0;
   out_6040097780864187302[29] = 0;
   out_6040097780864187302[30] = 0;
   out_6040097780864187302[31] = 0;
   out_6040097780864187302[32] = 0;
   out_6040097780864187302[33] = 1;
   out_6040097780864187302[34] = 0;
   out_6040097780864187302[35] = 0;
   out_6040097780864187302[36] = 0;
   out_6040097780864187302[37] = 0;
   out_6040097780864187302[38] = 0;
   out_6040097780864187302[39] = 0;
   out_6040097780864187302[40] = 0;
   out_6040097780864187302[41] = 0;
   out_6040097780864187302[42] = 0;
   out_6040097780864187302[43] = 0;
   out_6040097780864187302[44] = 0;
   out_6040097780864187302[45] = 0;
   out_6040097780864187302[46] = 0;
   out_6040097780864187302[47] = 0;
   out_6040097780864187302[48] = 0;
   out_6040097780864187302[49] = 0;
   out_6040097780864187302[50] = 0;
   out_6040097780864187302[51] = 0;
   out_6040097780864187302[52] = 0;
   out_6040097780864187302[53] = 0;
   out_6040097780864187302[54] = 0;
   out_6040097780864187302[55] = 0;
   out_6040097780864187302[56] = 1;
   out_6040097780864187302[57] = 0;
   out_6040097780864187302[58] = 0;
   out_6040097780864187302[59] = 0;
   out_6040097780864187302[60] = 0;
   out_6040097780864187302[61] = 0;
   out_6040097780864187302[62] = 0;
   out_6040097780864187302[63] = 0;
   out_6040097780864187302[64] = 0;
   out_6040097780864187302[65] = 0;
}
void h_33(double *state, double *unused, double *out_2814960144407831509) {
   out_2814960144407831509[0] = state[16];
   out_2814960144407831509[1] = state[17];
   out_2814960144407831509[2] = state[18];
}
void H_33(double *state, double *unused, double *out_235931634517687033) {
   out_235931634517687033[0] = 0;
   out_235931634517687033[1] = 0;
   out_235931634517687033[2] = 0;
   out_235931634517687033[3] = 0;
   out_235931634517687033[4] = 0;
   out_235931634517687033[5] = 0;
   out_235931634517687033[6] = 0;
   out_235931634517687033[7] = 0;
   out_235931634517687033[8] = 0;
   out_235931634517687033[9] = 0;
   out_235931634517687033[10] = 0;
   out_235931634517687033[11] = 0;
   out_235931634517687033[12] = 0;
   out_235931634517687033[13] = 0;
   out_235931634517687033[14] = 0;
   out_235931634517687033[15] = 0;
   out_235931634517687033[16] = 1;
   out_235931634517687033[17] = 0;
   out_235931634517687033[18] = 0;
   out_235931634517687033[19] = 0;
   out_235931634517687033[20] = 0;
   out_235931634517687033[21] = 0;
   out_235931634517687033[22] = 0;
   out_235931634517687033[23] = 0;
   out_235931634517687033[24] = 0;
   out_235931634517687033[25] = 0;
   out_235931634517687033[26] = 0;
   out_235931634517687033[27] = 0;
   out_235931634517687033[28] = 0;
   out_235931634517687033[29] = 0;
   out_235931634517687033[30] = 0;
   out_235931634517687033[31] = 0;
   out_235931634517687033[32] = 0;
   out_235931634517687033[33] = 0;
   out_235931634517687033[34] = 0;
   out_235931634517687033[35] = 0;
   out_235931634517687033[36] = 0;
   out_235931634517687033[37] = 0;
   out_235931634517687033[38] = 0;
   out_235931634517687033[39] = 1;
   out_235931634517687033[40] = 0;
   out_235931634517687033[41] = 0;
   out_235931634517687033[42] = 0;
   out_235931634517687033[43] = 0;
   out_235931634517687033[44] = 0;
   out_235931634517687033[45] = 0;
   out_235931634517687033[46] = 0;
   out_235931634517687033[47] = 0;
   out_235931634517687033[48] = 0;
   out_235931634517687033[49] = 0;
   out_235931634517687033[50] = 0;
   out_235931634517687033[51] = 0;
   out_235931634517687033[52] = 0;
   out_235931634517687033[53] = 0;
   out_235931634517687033[54] = 0;
   out_235931634517687033[55] = 0;
   out_235931634517687033[56] = 0;
   out_235931634517687033[57] = 0;
   out_235931634517687033[58] = 0;
   out_235931634517687033[59] = 0;
   out_235931634517687033[60] = 0;
   out_235931634517687033[61] = 0;
   out_235931634517687033[62] = 1;
   out_235931634517687033[63] = 0;
   out_235931634517687033[64] = 0;
   out_235931634517687033[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6561920401057787819) {
  H(in_vec, out_6561920401057787819);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_16477353932622553) {
  err_fun(nom_x, delta_x, out_16477353932622553);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7785115287148617816) {
  inv_err_fun(nom_x, true_x, out_7785115287148617816);
}
void live_H_mod_fun(double *state, double *out_5179096700905171275) {
  H_mod_fun(state, out_5179096700905171275);
}
void live_f_fun(double *state, double dt, double *out_6097931550597603004) {
  f_fun(state,  dt, out_6097931550597603004);
}
void live_F_fun(double *state, double dt, double *out_5981841266691318099) {
  F_fun(state,  dt, out_5981841266691318099);
}
void live_h_4(double *state, double *unused, double *out_9198479962028836947) {
  h_4(state, unused, out_9198479962028836947);
}
void live_H_4(double *state, double *unused, double *out_6281287427493777947) {
  H_4(state, unused, out_6281287427493777947);
}
void live_h_9(double *state, double *unused, double *out_2057064782794859210) {
  h_9(state, unused, out_2057064782794859210);
}
void live_H_9(double *state, double *unused, double *out_6040097780864187302) {
  H_9(state, unused, out_6040097780864187302);
}
void live_h_10(double *state, double *unused, double *out_1204215357562160093) {
  h_10(state, unused, out_1204215357562160093);
}
void live_H_10(double *state, double *unused, double *out_1900819658776085935) {
  H_10(state, unused, out_1900819658776085935);
}
void live_h_12(double *state, double *unused, double *out_629444147086537644) {
  h_12(state, unused, out_629444147086537644);
}
void live_H_12(double *state, double *unused, double *out_1261831019461816152) {
  H_12(state, unused, out_1261831019461816152);
}
void live_h_31(double *state, double *unused, double *out_7427230565770690149) {
  h_31(state, unused, out_7427230565770690149);
}
void live_H_31(double *state, double *unused, double *out_2914625370121170571) {
  H_31(state, unused, out_2914625370121170571);
}
void live_h_32(double *state, double *unused, double *out_8420318723687336568) {
  h_32(state, unused, out_8420318723687336568);
}
void live_H_32(double *state, double *unused, double *out_5801106792969625067) {
  H_32(state, unused, out_5801106792969625067);
}
void live_h_13(double *state, double *unused, double *out_5658429962566026922) {
  h_13(state, unused, out_5658429962566026922);
}
void live_H_13(double *state, double *unused, double *out_7350297393207904790) {
  H_13(state, unused, out_7350297393207904790);
}
void live_h_14(double *state, double *unused, double *out_2057064782794859210) {
  h_14(state, unused, out_2057064782794859210);
}
void live_H_14(double *state, double *unused, double *out_6040097780864187302) {
  H_14(state, unused, out_6040097780864187302);
}
void live_h_33(double *state, double *unused, double *out_2814960144407831509) {
  h_33(state, unused, out_2814960144407831509);
}
void live_H_33(double *state, double *unused, double *out_235931634517687033) {
  H_33(state, unused, out_235931634517687033);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
